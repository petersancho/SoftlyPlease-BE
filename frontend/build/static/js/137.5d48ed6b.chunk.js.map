{"version":3,"file":"static/js/137.5d48ed6b.chunk.js","mappings":"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","sources":["pages/ConfiguratorPage.tsx","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Container = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: 2rem;\n`;\n\nconst Header = styled.div`\n  text-align: center;\n  margin-bottom: 3rem;\n`;\n\nconst Title = styled.h1`\n  color: #ffffff;\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst Subtitle = styled.p`\n  color: #cccccc;\n  font-size: 1.2rem;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst ConfiguratorLayout = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 2rem;\n  align-items: start;\n\n  @media (max-width: 1200px) {\n    grid-template-columns: 1fr;\n    gap: 1rem;\n  }\n`;\n\nconst ControlPanel = styled.div`\n  background: #1a1a1a;\n  border-radius: 12px;\n  padding: 2rem;\n  border: 1px solid #333;\n`;\n\nconst ViewerPanel = styled.div`\n  background: #1a1a1a;\n  border-radius: 12px;\n  padding: 2rem;\n  border: 1px solid #333;\n  min-height: 600px;\n`;\n\nconst SectionTitle = styled.h2`\n  color: #ffffff;\n  font-size: 1.8rem;\n  margin-bottom: 1.5rem;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst ParameterGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1.5rem;\n  margin-bottom: 2rem;\n`;\n\nconst ParameterGroup = styled.div`\n  background: #2a2a2a;\n  padding: 1.5rem;\n  border-radius: 8px;\n  border-left: 4px solid #666;\n`;\n\nconst ParameterTitle = styled.h3`\n  color: #ffffff;\n  margin-bottom: 1rem;\n  font-size: 1.2rem;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst ParameterItem = styled.div`\n  margin-bottom: 1.5rem;\n`;\n\nconst ParameterLabel = styled.label`\n  display: block;\n  margin-bottom: 0.5rem;\n  color: #cccccc;\n  font-family: 'Times New Roman', serif;\n  font-size: 0.9rem;\n`;\n\n\n\nconst ParameterSelect = styled.select`\n  width: 100%;\n  padding: 0.75rem;\n  border: 2px solid #444;\n  border-radius: 6px;\n  background: #333;\n  color: #ffffff;\n  font-size: 1rem;\n  font-family: 'Times New Roman', serif;\n  transition: all 0.3s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #666;\n  }\n`;\n\nconst SliderContainer = styled.div`\n  position: relative;\n`;\n\nconst Slider = styled.input`\n  width: 100%;\n  height: 6px;\n  background: #444;\n  border-radius: 3px;\n  outline: none;\n  -webkit-appearance: none;\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: #666;\n    cursor: pointer;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst ValueDisplay = styled.div`\n  position: absolute;\n  right: 0;\n  top: -25px;\n  background: #666;\n  color: #ffffff;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 0.8rem;\n  font-weight: 600;\n  font-family: 'Times New Roman', serif;\n`;\n\n\n\nconst DefinitionSelector = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst DefinitionSelect = styled.select`\n  width: 100%;\n  padding: 1rem;\n  border: 2px solid #444;\n  border-radius: 8px;\n  background: #2a2a2a;\n  color: #ffffff;\n  font-size: 1.1rem;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst ViewerContainer = styled.div`\n  width: 100%;\n  height: 500px;\n  background: #000000;\n  border-radius: 8px;\n  border: 1px solid #333;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst ViewerTitle = styled.h3`\n  color: #ffffff;\n  margin-bottom: 1rem;\n  font-size: 1.5rem;\n`;\n\nconst ViewerDescription = styled.p`\n  color: #cccccc;\n  margin-bottom: 2rem;\n  line-height: 1.6;\n`;\n\nconst StatusPanel = styled.div`\n  margin-top: 2rem;\n  padding: 1rem;\n  background: #2a2a2a;\n  border-radius: 8px;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst StatusTitle = styled.h4`\n  color: #ffffff;\n  margin-bottom: 0.5rem;\n  font-size: 1rem;\n`;\n\nconst StatusText = styled.p`\n  color: #cccccc;\n  font-size: 0.9rem;\n`;\n\nconst ConfiguratorPage: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [currentDefinition, setCurrentDefinition] = useState(searchParams.get('definition') || 'TopoOpt.gh');\n  const [parameters, setParameters] = useState<Record<string, any>>({});\n  const [isComputing, setIsComputing] = useState(false);\n  const [computationResult, setComputationResult] = useState<any>(null);\n  const [performanceData, setPerformanceData] = useState<any>(null);\n  const [status, setStatus] = useState('Ready to explore');\n  const [availableDefinitions, setAvailableDefinitions] = useState<string[]>(['TopoOpt.gh']);\n  const [definitionInfo, setDefinitionInfo] = useState<any>(null);\n\n  // Fetch available definitions on component mount\n  useEffect(() => {\n    const fetchDefinitions = async () => {\n      try {\n        const response = await fetch('/api/definitions');\n        if (response.ok) {\n          const data = await response.json();\n          const defs = data.map((d: any) => d.name);\n          setAvailableDefinitions(defs);\n          console.log('Available definitions:', defs);\n        }\n      } catch (error) {\n        console.error('Failed to fetch definitions:', error);\n        setStatus('Failed to load definitions');\n      }\n    };\n\n    fetchDefinitions();\n  }, []);\n\n  // Fetch definition info when definition changes\n  useEffect(() => {\n    const fetchDefinitionInfo = async () => {\n      if (!currentDefinition) return;\n\n      try {\n        const response = await fetch(`/${currentDefinition}`);\n        if (response.ok) {\n          const data = await response.json();\n          setDefinitionInfo(data);\n          console.log('Definition info:', data);\n        } else {\n          console.error('Failed to fetch definition info');\n        }\n      } catch (error) {\n        console.error('Error fetching definition info:', error);\n      }\n    };\n\n    fetchDefinitionInfo();\n  }, [currentDefinition]);\n\n  const handleDefinitionChange = (definition: string) => {\n    setCurrentDefinition(definition);\n    setSearchParams({ definition });\n    setParameters({});\n    setComputationResult(null);\n    setPerformanceData(null);\n    setStatus(`Selected: ${definition.replace('.gh', '')}`);\n  };\n\n  const handleParameterChange = (paramName: string, value: any) => {\n    setParameters(prev => ({\n      ...prev,\n      [paramName]: value\n    }));\n\n    setStatus(`Parameter updated: ${paramName} = ${value}`);\n    console.log(`Parameter updated: ${paramName} = ${value}`);\n  };\n\n  const handleCompute = async () => {\n    if (!currentDefinition) {\n      setStatus('❌ Please select a definition first');\n      return;\n    }\n\n    setIsComputing(true);\n    setStatus('🔄 Computing geometry...');\n\n    try {\n      // Prepare the request data\n      const requestData = {\n        definition: currentDefinition,\n        inputs: {} as Record<string, any[]>\n      };\n\n      // Convert parameters to the expected format\n      Object.keys(parameters).forEach(key => {\n        const value = (parameters as Record<string, any>)[key];\n        requestData.inputs[key] = Array.isArray(value) ? value : [value];\n      });\n\n      console.log('Sending computation request:', requestData);\n\n      const startTime = Date.now();\n\n      // Send the computation request\n      const response = await fetch('/solve', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestData)\n      });\n\n      const endTime = Date.now();\n      const responseTime = endTime - startTime;\n\n      if (response.ok) {\n        const result = await response.json();\n        console.log('Computation result:', result);\n\n        setComputationResult(result);\n\n        // Extract performance data from headers\n        const perfData = {\n          responseTime: responseTime,\n          cacheHit: response.headers.get('x-cache') === 'HIT',\n          computeTime: parseInt(response.headers.get('x-compute-time') || '0'),\n          definition: response.headers.get('x-definition'),\n          resultSize: response.headers.get('x-result-size')\n        };\n\n        setPerformanceData(perfData);\n\n        if (result.success !== false) {\n          setStatus('✅ Geometry computed successfully!');\n        } else {\n          setStatus(`❌ Computation failed: ${result.message || 'Unknown error'}`);\n        }\n      } else {\n        const error = await response.json().catch(() => ({ message: 'Unknown error' }));\n        setStatus(`❌ Error: ${error.message || `HTTP ${response.status}`}`);\n        console.error('Computation error:', error);\n      }\n\n    } catch (error) {\n      console.error('Network error:', error);\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n      setStatus(`❌ Network error: ${errorMessage}`);\n    } finally {\n      setIsComputing(false);\n    }\n  };\n\n\n\n  const renderTopoOptControls = () => (\n    <>\n      <ParameterGrid>\n        <ParameterGroup>\n          <ParameterTitle>🎛️ MultiPipe Parameters</ParameterTitle>\n          <ParameterItem>\n            <ParameterLabel>Smooth</ParameterLabel>\n            <SliderContainer>\n              <Slider\n                type=\"range\"\n                min=\"0\"\n                max=\"10\"\n                step=\"1\"\n                value={parameters.smooth || 3}\n                onChange={(e) => handleParameterChange('smooth', parseInt(e.target.value))}\n              />\n              <ValueDisplay>{parameters.smooth || 3}</ValueDisplay>\n            </SliderContainer>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>Cube</ParameterLabel>\n            <SliderContainer>\n              <Slider\n                type=\"range\"\n                min=\"0\"\n                max=\"10\"\n                step=\"1\"\n                value={parameters.cube || 2}\n                onChange={(e) => handleParameterChange('cube', parseInt(e.target.value))}\n              />\n              <ValueDisplay>{parameters.cube || 2}</ValueDisplay>\n            </SliderContainer>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>Segment</ParameterLabel>\n            <SliderContainer>\n              <Slider\n                type=\"range\"\n                min=\"1\"\n                max=\"20\"\n                step=\"1\"\n                value={parameters.segment || 8}\n                onChange={(e) => handleParameterChange('segment', parseInt(e.target.value))}\n              />\n              <ValueDisplay>{parameters.segment || 8}</ValueDisplay>\n            </SliderContainer>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>Pipe Width</ParameterLabel>\n            <SliderContainer>\n              <Slider\n                type=\"range\"\n                min=\"1\"\n                max=\"50\"\n                step=\"1\"\n                value={parameters.pipewidth || 10}\n                onChange={(e) => handleParameterChange('pipewidth', parseInt(e.target.value))}\n              />\n              <ValueDisplay>{parameters.pipewidth || 10}</ValueDisplay>\n            </SliderContainer>\n          </ParameterItem>\n        </ParameterGroup>\n\n        <ParameterGroup>\n          <ParameterTitle>🔧 Mesh Processing</ParameterTitle>\n          <ParameterItem>\n            <ParameterLabel>Round</ParameterLabel>\n            <SliderContainer>\n              <Slider\n                type=\"range\"\n                min=\"0\"\n                max=\"10\"\n                step=\"1\"\n                value={parameters.round || 2}\n                onChange={(e) => handleParameterChange('round', parseInt(e.target.value))}\n              />\n              <ValueDisplay>{parameters.round || 2}</ValueDisplay>\n            </SliderContainer>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>Tolerance</ParameterLabel>\n            <SliderContainer>\n              <Slider\n                type=\"range\"\n                min=\"0\"\n                max=\"100\"\n                step=\"1\"\n                value={parameters.tolerance || 5}\n                onChange={(e) => handleParameterChange('tolerance', parseInt(e.target.value))}\n              />\n              <ValueDisplay>{parameters.tolerance || 5}</ValueDisplay>\n            </SliderContainer>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>MINR (Smaller Than)</ParameterLabel>\n            <SliderContainer>\n              <Slider\n                type=\"range\"\n                min=\"1\"\n                max=\"100\"\n                step=\"1\"\n                value={parameters.minr || 10}\n                onChange={(e) => handleParameterChange('minr', parseInt(e.target.value))}\n              />\n              <ValueDisplay>{parameters.minr || 10}</ValueDisplay>\n            </SliderContainer>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>MAXR (Larger Than)</ParameterLabel>\n            <SliderContainer>\n              <Slider\n                type=\"range\"\n                min=\"1\"\n                max=\"200\"\n                step=\"1\"\n                value={parameters.maxr || 50}\n                onChange={(e) => handleParameterChange('maxr', parseInt(e.target.value))}\n              />\n              <ValueDisplay>{parameters.maxr || 50}</ValueDisplay>\n            </SliderContainer>\n          </ParameterItem>\n        </ParameterGroup>\n\n        <ParameterGroup>\n          <ParameterTitle>🎯 Output Options</ParameterTitle>\n          <ParameterItem>\n            <ParameterLabel>Output Format</ParameterLabel>\n            <ParameterSelect\n              value={parameters.format || 'mesh'}\n              onChange={(e) => handleParameterChange('format', e.target.value)}\n            >\n              <option value=\"mesh\">Mesh (SUBD)</option>\n              <option value=\"brep\">BREP</option>\n              <option value=\"stl\">STL</option>\n              <option value=\"obj\">OBJ</option>\n            </ParameterSelect>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>Quality Level</ParameterLabel>\n            <SliderContainer>\n              <Slider\n                type=\"range\"\n                min=\"1\"\n                max=\"10\"\n                step=\"1\"\n                value={parameters.quality || 5}\n                onChange={(e) => handleParameterChange('quality', parseInt(e.target.value))}\n              />\n              <ValueDisplay>{parameters.quality || 5}</ValueDisplay>\n            </SliderContainer>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>Detail Level</ParameterLabel>\n            <SliderContainer>\n              <Slider\n                type=\"range\"\n                min=\"1\"\n                max=\"20\"\n                step=\"1\"\n                value={parameters.detail || 10}\n                onChange={(e) => handleParameterChange('detail', parseInt(e.target.value))}\n              />\n              <ValueDisplay>{parameters.detail || 10}</ValueDisplay>\n            </SliderContainer>\n          </ParameterItem>\n        </ParameterGroup>\n\n        <ParameterGroup>\n          <ParameterTitle>🔧 Advanced Options</ParameterTitle>\n          <ParameterItem>\n            <ParameterLabel>\n              <input\n                type=\"checkbox\"\n                checked={parameters.preview !== false}\n                onChange={(e) => handleParameterChange('preview', e.target.checked)}\n                style={{ marginRight: '8px' }}\n              />\n              Show Preview\n            </ParameterLabel>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>\n              <input\n                type=\"checkbox\"\n                checked={parameters.optimize !== false}\n                onChange={(e) => handleParameterChange('optimize', e.target.checked)}\n                style={{ marginRight: '8px' }}\n              />\n              Optimize Mesh\n            </ParameterLabel>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>\n              <input\n                type=\"checkbox\"\n                checked={parameters.export === true}\n                onChange={(e) => handleParameterChange('export', e.target.checked)}\n                style={{ marginRight: '8px' }}\n              />\n              Export on Complete\n            </ParameterLabel>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>Processing Mode</ParameterLabel>\n            <ParameterSelect\n              value={parameters.mode || 'balanced'}\n              onChange={(e) => handleParameterChange('mode', e.target.value)}\n            >\n              <option value=\"fast\">Fast</option>\n              <option value=\"balanced\">Balanced</option>\n              <option value=\"quality\">High Quality</option>\n            </ParameterSelect>\n          </ParameterItem>\n        </ParameterGroup>\n      </ParameterGrid>\n    </>\n  );\n\n  const renderGenericControls = () => (\n    <div style={{ padding: '2rem', textAlign: 'center', color: '#cccccc' }}>\n      <p>This definition has been loaded and is ready for computation.</p>\n      <p>Use the parameters above to customize the computation.</p>\n    </div>\n  );\n\n  return (\n    <Container>\n      <Header>\n        <Title>🔷 Soft.Geometry</Title>\n        <Subtitle>Advanced computational geometry and topology optimization platform</Subtitle>\n      </Header>\n\n      <ConfiguratorLayout>\n        <ControlPanel>\n          <SectionTitle>🎛️ Parameters</SectionTitle>\n\n          <DefinitionSelector>\n            <ParameterLabel>Select Definition</ParameterLabel>\n            <DefinitionSelect\n              value={currentDefinition}\n              onChange={(e) => handleDefinitionChange(e.target.value)}\n            >\n              {availableDefinitions.map(def => (\n                <option key={def} value={def}>\n                  {def.replace('.gh', '')}\n                </option>\n              ))}\n            </DefinitionSelect>\n          </DefinitionSelector>\n\n          {currentDefinition === 'TopoOpt.gh' ? renderTopoOptControls() : renderGenericControls()}\n\n          <div style={{ marginTop: '2rem', display: 'flex', gap: '1rem', justifyContent: 'center' }}>\n            <button\n              onClick={handleCompute}\n              disabled={isComputing}\n              style={{\n                background: isComputing ? '#444' : 'linear-gradient(45deg, #ff6b9d, #4ecdc4)',\n                color: 'white',\n                border: 'none',\n                padding: '1rem 2rem',\n                borderRadius: '8px',\n                fontSize: '1.1rem',\n                fontWeight: '600',\n                fontFamily: '\"Times New Roman\", serif',\n                cursor: isComputing ? 'not-allowed' : 'pointer',\n                transition: 'all 0.3s ease'\n              }}\n            >\n              {isComputing ? '🔄 Computing...' : '🚀 Generate Geometry'}\n            </button>\n\n            <button\n              onClick={() => {\n                setParameters({});\n                setComputationResult(null);\n                setPerformanceData(null);\n                setStatus('Parameters reset to defaults');\n              }}\n              style={{\n                background: '#444',\n                color: 'white',\n                border: 'none',\n                padding: '1rem 2rem',\n                borderRadius: '8px',\n                fontSize: '1.1rem',\n                fontWeight: '600',\n                fontFamily: '\"Times New Roman\", serif',\n                cursor: 'pointer',\n                transition: 'all 0.3s ease'\n              }}\n            >\n              🔄 Reset Parameters\n            </button>\n          </div>\n\n          <StatusPanel>\n            <StatusTitle>🔷 Soft.Geometry Status</StatusTitle>\n            <StatusText>{status}</StatusText>\n\n            {performanceData && (\n              <div style={{ marginTop: '1rem', fontSize: '0.85rem', color: '#999' }}>\n                <div>Response Time: {performanceData.responseTime}ms</div>\n                <div>Cache Hit: {performanceData.cacheHit ? 'Yes' : 'No'}</div>\n                {performanceData.computeTime > 0 && (\n                  <div>Compute Time: {performanceData.computeTime}ms</div>\n                )}\n              </div>\n            )}\n\n            {computationResult && computationResult.data && (\n              <div style={{ marginTop: '1rem', fontSize: '0.85rem', color: '#4ecdc4' }}>\n                <div>Geometry: {computationResult.data.type || 'Generated'}</div>\n                {computationResult.data.geometry && (\n                  <div>Details: {JSON.stringify(computationResult.data.geometry).length} bytes</div>\n                )}\n              </div>\n            )}\n          </StatusPanel>\n        </ControlPanel>\n\n        <ViewerPanel>\n          <SectionTitle>👁️ 3D Viewer</SectionTitle>\n\n          <ViewerContainer>\n            {!computationResult ? (\n              <div style={{\n                width: '100%',\n                height: '100%',\n                background: '#1a1a1a',\n                borderRadius: '8px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                color: '#ffffff',\n                fontFamily: '\"Times New Roman\", serif',\n                textAlign: 'center',\n                padding: '2rem',\n                border: '2px dashed #4ecdc4'\n              }}>\n                <div>\n                  <div style={{\n                    fontSize: '3rem',\n                    marginBottom: '1rem',\n                    background: 'linear-gradient(45deg, #ff6b9d, #4ecdc4, #ffe66d)',\n                    WebkitBackgroundClip: 'text',\n                    WebkitTextFillColor: 'transparent',\n                    backgroundClip: 'text'\n                  }}>\n                    🎯\n                  </div>\n                  <ViewerTitle style={{ color: '#ffffff' }}>\n                    {currentDefinition.replace('.gh', '')} Visualizer\n                  </ViewerTitle>\n                  <ViewerDescription style={{ color: '#cccccc', marginBottom: '2rem' }}>\n                    Configure parameters and click \"Generate Geometry\" to see the computational results.\n                    Soft.Geometry provides core computational tools for advanced design exploration.\n                  </ViewerDescription>\n\n                  <div style={{\n                    marginTop: '2rem',\n                    padding: '1rem',\n                    background: 'rgba(255, 255, 255, 0.05)',\n                    borderRadius: '8px',\n                    fontSize: '0.9rem',\n                    color: '#cccccc'\n                  }}>\n                    💡 <strong>Ready to Compute:</strong> Adjust the parameters in the left panel and click \"Generate Geometry\"\n                    to see real-time computational results with performance metrics.\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div style={{\n                width: '100%',\n                height: '100%',\n                background: '#1a1a1a',\n                borderRadius: '8px',\n                display: 'flex',\n                flexDirection: 'column',\n                color: '#ffffff',\n                fontFamily: '\"Times New Roman\", serif'\n              }}>\n                <div style={{\n                  padding: '1rem',\n                  background: 'rgba(78, 205, 196, 0.1)',\n                  borderBottom: '1px solid #333',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center'\n                }}>\n                  <div>\n                    <strong style={{ color: '#4ecdc4' }}>\n                      {computationResult.data?.type || 'Computation'} Results\n                    </strong>\n                  </div>\n                  <div style={{ fontSize: '0.8rem', color: '#ccc' }}>\n                    {new Date(computationResult.data?.timestamp || Date.now()).toLocaleTimeString()}\n                  </div>\n                </div>\n\n                <div style={{\n                  flex: 1,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  padding: '2rem',\n                  textAlign: 'center'\n                }}>\n                  <div>\n                    <div style={{\n                      fontSize: '4rem',\n                      marginBottom: '1rem',\n                      background: 'linear-gradient(45deg, #ff6b9d, #4ecdc4)',\n                      WebkitBackgroundClip: 'text',\n                      WebkitTextFillColor: 'transparent',\n                      backgroundClip: 'text'\n                    }}>\n                      ✅\n                    </div>\n\n                    <ViewerTitle style={{ color: '#4ecdc4', marginBottom: '1rem' }}>\n                      Computation Complete!\n                    </ViewerTitle>\n\n                    <div style={{\n                      background: 'rgba(255, 255, 255, 0.05)',\n                      padding: '1.5rem',\n                      borderRadius: '8px',\n                      marginBottom: '2rem',\n                      fontSize: '0.9rem'\n                    }}>\n                      {computationResult.data?.type === 'topology_optimization' && (\n                        <div style={{ marginBottom: '1rem' }}>\n                          <div style={{ color: '#4ecdc4', fontWeight: 'bold', marginBottom: '0.5rem' }}>\n                            🧮 Topology Optimization Results\n                          </div>\n                          <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '0.5rem', textAlign: 'left' }}>\n                            <div>Original Volume: {(computationResult.data.geometry?.originalVolume || 0).toLocaleString()} mm³</div>\n                            <div>Optimized Volume: {(computationResult.data.geometry?.optimizedVolume || 0).toLocaleString()} mm³</div>\n                            <div>Material Reduction: {((computationResult.data.geometry?.optimizationRatio || 0) * 100).toFixed(1)}%</div>\n                            <div>Nodes: {computationResult.data.geometry?.nodes || 0}</div>\n                            <div>Max Stress: {computationResult.data.performance?.maxStress?.toFixed(2) || 0} MPa</div>\n                            <div>Safety Factor: {computationResult.data.performance?.factorOfSafety?.toFixed(2) || 0}</div>\n                          </div>\n                        </div>\n                      )}\n\n                      {computationResult.data?.type && computationResult.data.type !== 'topology_optimization' && (\n                        <div style={{ marginBottom: '1rem' }}>\n                          <div style={{ color: '#4ecdc4', fontWeight: 'bold', marginBottom: '0.5rem' }}>\n                            📊 Computation Results\n                          </div>\n                          <div style={{ textAlign: 'left' }}>\n                            <div>Type: {computationResult.data.type}</div>\n                            {computationResult.data.geometry && (\n                              <div>Geometry Size: {JSON.stringify(computationResult.data.geometry).length} bytes</div>\n                            )}\n                          </div>\n                        </div>\n                      )}\n\n                      <div style={{ marginTop: '1rem', padding: '1rem', background: 'rgba(255, 107, 157, 0.1)', borderRadius: '4px' }}>\n                        <div style={{ color: '#ff6b9d', fontWeight: 'bold', marginBottom: '0.5rem' }}>\n                          📈 Performance Metrics\n                        </div>\n                        <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '0.5rem', textAlign: 'left', fontSize: '0.8rem' }}>\n                          <div>Response Time: {performanceData?.responseTime || 0}ms</div>\n                          <div>Cache Hit: {performanceData?.cacheHit ? 'Yes' : 'No'}</div>\n                          <div>Compute Time: {performanceData?.computeTime || 0}ms</div>\n                          <div>Result Size: {performanceData?.resultSize || 'Unknown'}</div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div style={{\n                      fontSize: '0.9rem',\n                      color: '#cccccc',\n                      marginBottom: '2rem'\n                    }}>\n                      💡 <strong>3D Viewer:</strong> A full Three.js viewer would be integrated here to visualize\n                      the computed geometry in real-time. The current setup demonstrates the complete\n                      computational pipeline with performance monitoring.\n                    </div>\n\n                    <button\n                      onClick={() => {\n                        setComputationResult(null);\n                        setPerformanceData(null);\n                        setStatus('Ready to explore');\n                      }}\n                      style={{\n                        background: '#444',\n                        color: 'white',\n                        border: 'none',\n                        padding: '0.75rem 1.5rem',\n                        borderRadius: '6px',\n                        fontSize: '0.9rem',\n                        fontFamily: '\"Times New Roman\", serif',\n                        cursor: 'pointer',\n                        transition: 'all 0.3s ease'\n                      }}\n                    >\n                      🔄 New Computation\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n          </ViewerContainer>\n        </ViewerPanel>\n      </ConfiguratorLayout>\n    </Container>\n  );\n};\n\nexport default ConfiguratorPage;\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Header","_templateObject2","Title","h1","_templateObject3","Subtitle","p","_templateObject4","ConfiguratorLayout","_templateObject5","ControlPanel","_templateObject6","ViewerPanel","_templateObject7","SectionTitle","h2","_templateObject8","ParameterGrid","_templateObject9","ParameterGroup","_templateObject0","ParameterTitle","h3","_templateObject1","ParameterItem","_templateObject10","ParameterLabel","label","_templateObject11","ParameterSelect","select","_templateObject12","SliderContainer","_templateObject13","Slider","input","_templateObject14","ValueDisplay","_templateObject15","DefinitionSelector","_templateObject16","DefinitionSelect","_templateObject17","ViewerContainer","_templateObject18","ViewerTitle","_templateObject19","ViewerDescription","_templateObject20","StatusPanel","_templateObject21","StatusTitle","h4","_templateObject22","StatusText","_templateObject23","ConfiguratorPage","_computationResult$da","_computationResult$da2","_computationResult$da3","_computationResult$da4","_computationResult$da5","_computationResult$da6","_computationResult$da7","_computationResult$da8","_computationResult$da9","_computationResult$da0","_computationResult$da1","_computationResult$da10","searchParams","setSearchParams","useSearchParams","currentDefinition","setCurrentDefinition","useState","get","parameters","setParameters","isComputing","setIsComputing","computationResult","setComputationResult","performanceData","setPerformanceData","status","setStatus","availableDefinitions","setAvailableDefinitions","definitionInfo","setDefinitionInfo","useEffect","async","response","fetch","ok","defs","json","map","d","name","console","log","error","fetchDefinitions","concat","data","fetchDefinitionInfo","handleParameterChange","paramName","value","prev","_objectSpread","_jsxs","children","_jsx","onChange","e","handleDefinitionChange","definition","target","replace","def","_Fragment","type","min","max","step","smooth","parseInt","cube","segment","pipewidth","round","tolerance","minr","maxr","format","quality","detail","checked","preview","style","marginRight","optimize","export","mode","padding","textAlign","color","marginTop","display","gap","justifyContent","onClick","requestData","inputs","Object","keys","forEach","key","Array","isArray","startTime","Date","now","method","headers","body","JSON","stringify","responseTime","result","perfData","cacheHit","computeTime","resultSize","success","message","catch","errorMessage","Error","disabled","background","border","borderRadius","fontSize","fontWeight","fontFamily","cursor","transition","geometry","length","width","height","flexDirection","borderBottom","alignItems","timestamp","toLocaleTimeString","flex","marginBottom","WebkitBackgroundClip","WebkitTextFillColor","backgroundClip","gridTemplateColumns","originalVolume","toLocaleString","optimizedVolume","optimizationRatio","toFixed","nodes","performance","maxStress","factorOfSafety","_typeof","o","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","r","toPrimitive","call","TypeError","String","Number","_defineProperty","defineProperty","enumerable","configurable","writable","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}