{"version":3,"file":"static/js/549.d165852c.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","pages/ConfiguratorPage.tsx"],"sourcesContent":["function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Container = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: 2rem;\n`;\n\nconst Header = styled.div`\n  text-align: center;\n  margin-bottom: 3rem;\n`;\n\nconst Title = styled.h1`\n  color: #ffffff;\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst Subtitle = styled.p`\n  color: #cccccc;\n  font-size: 1.2rem;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst ConfiguratorLayout = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 2rem;\n  align-items: start;\n\n  @media (max-width: 1200px) {\n    grid-template-columns: 1fr;\n    gap: 1rem;\n  }\n`;\n\nconst ControlPanel = styled.div`\n  background: #1a1a1a;\n  border-radius: 12px;\n  padding: 2rem;\n  border: 1px solid #333;\n`;\n\nconst ViewerPanel = styled.div`\n  background: #1a1a1a;\n  border-radius: 12px;\n  padding: 2rem;\n  border: 1px solid #333;\n  min-height: 600px;\n`;\n\nconst SectionTitle = styled.h2`\n  color: #ffffff;\n  font-size: 1.8rem;\n  margin-bottom: 1.5rem;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst ParameterGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1.5rem;\n  margin-bottom: 2rem;\n`;\n\nconst ParameterGroup = styled.div`\n  background: #2a2a2a;\n  padding: 1.5rem;\n  border-radius: 8px;\n  border-left: 4px solid #666;\n`;\n\nconst ParameterTitle = styled.h3`\n  color: #ffffff;\n  margin-bottom: 1rem;\n  font-size: 1.2rem;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst ParameterItem = styled.div`\n  margin-bottom: 1.5rem;\n`;\n\nconst ParameterLabel = styled.label`\n  display: block;\n  margin-bottom: 0.5rem;\n  color: #cccccc;\n  font-family: 'Times New Roman', serif;\n  font-size: 0.9rem;\n`;\n\nconst ParameterInput = styled.input`\n  width: 100%;\n  padding: 0.75rem;\n  border: 2px solid #444;\n  border-radius: 6px;\n  background: #333;\n  color: #ffffff;\n  font-size: 1rem;\n  font-family: 'Times New Roman', serif;\n  transition: all 0.3s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #666;\n    box-shadow: 0 0 0 3px rgba(102, 102, 102, 0.1);\n  }\n`;\n\nconst ParameterSelect = styled.select`\n  width: 100%;\n  padding: 0.75rem;\n  border: 2px solid #444;\n  border-radius: 6px;\n  background: #333;\n  color: #ffffff;\n  font-size: 1rem;\n  font-family: 'Times New Roman', serif;\n  transition: all 0.3s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #666;\n  }\n`;\n\nconst SliderContainer = styled.div`\n  position: relative;\n`;\n\nconst Slider = styled.input`\n  width: 100%;\n  height: 6px;\n  background: #444;\n  border-radius: 3px;\n  outline: none;\n  -webkit-appearance: none;\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: #666;\n    cursor: pointer;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst ValueDisplay = styled.div`\n  position: absolute;\n  right: 0;\n  top: -25px;\n  background: #666;\n  color: #ffffff;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 0.8rem;\n  font-weight: 600;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst ControlButton = styled.button`\n  background: linear-gradient(45deg, #666666, #888888);\n  color: white;\n  border: none;\n  padding: 15px 30px;\n  border-radius: 8px;\n  font-size: 1.1rem;\n  font-weight: 600;\n  font-family: 'Times New Roman', serif;\n  cursor: pointer;\n  margin: 1rem 0.5rem 0 0;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(102, 102, 102, 0.3);\n  }\n`;\n\nconst DefinitionSelector = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst DefinitionSelect = styled.select`\n  width: 100%;\n  padding: 1rem;\n  border: 2px solid #444;\n  border-radius: 8px;\n  background: #2a2a2a;\n  color: #ffffff;\n  font-size: 1.1rem;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst ViewerContainer = styled.div`\n  width: 100%;\n  height: 500px;\n  background: #000000;\n  border-radius: 8px;\n  border: 1px solid #333;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst ViewerPlaceholder = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #cccccc;\n  font-family: 'Times New Roman', serif;\n  text-align: center;\n  padding: 2rem;\n`;\n\nconst ViewerTitle = styled.h3`\n  color: #ffffff;\n  margin-bottom: 1rem;\n  font-size: 1.5rem;\n`;\n\nconst ViewerDescription = styled.p`\n  color: #cccccc;\n  margin-bottom: 2rem;\n  line-height: 1.6;\n`;\n\nconst StatusPanel = styled.div`\n  margin-top: 2rem;\n  padding: 1rem;\n  background: #2a2a2a;\n  border-radius: 8px;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst StatusTitle = styled.h4`\n  color: #ffffff;\n  margin-bottom: 0.5rem;\n  font-size: 1rem;\n`;\n\nconst StatusText = styled.p`\n  color: #cccccc;\n  font-size: 0.9rem;\n`;\n\nconst ConfiguratorPage: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [currentDefinition, setCurrentDefinition] = useState(searchParams.get('definition') || 'TopoOpt.gh');\n  const [parameters, setParameters] = useState<Record<string, any>>({});\n  const [isComputing, setIsComputing] = useState(false);\n  const [status, setStatus] = useState('Ready to compute');\n\n  // Available definitions\n  const definitions = [\n    'TopoOpt.gh',\n    'Bending_gridshell.gh',\n    'BranchNodeRnd.gh',\n    'QuadPanelAperture.gh',\n    'SampleGHConvertTo3dm.gh',\n    'beam_mod.gh',\n    'brep_union.gh',\n    'delaunay.gh',\n    'docString.gh',\n    'dresser3.gh',\n    'metaballTable.gh',\n    'rnd_lattice.gh',\n    'rnd_node.gh',\n    'srf_kmeans.gh',\n    'value_list.gh'\n  ];\n\n  const handleDefinitionChange = (definition: string) => {\n    setCurrentDefinition(definition);\n    setSearchParams({ definition });\n    setParameters({});\n  };\n\n  const handleParameterChange = (paramName: string, value: any) => {\n    setParameters(prev => ({\n      ...prev,\n      [paramName]: value\n    }));\n  };\n\n  const handleCompute = async () => {\n    setIsComputing(true);\n    setStatus('Computing...');\n\n    try {\n      // Prepare inputs for the API call\n      const inputs: Record<string, any> = {};\n\n      // Add current parameters to inputs\n      Object.entries(parameters).forEach(([key, value]) => {\n        inputs[key] = Array.isArray(value) ? value : [value];\n      });\n\n      const response = await fetch('/solve', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          definition: currentDefinition,\n          inputs: inputs\n        })\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        setStatus('✅ Computation completed successfully!');\n        console.log('Computation result:', result);\n      } else {\n        const error = await response.json();\n        setStatus(`❌ Error: ${error.message || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Computation error:', error);\n      setStatus(`❌ Network error: ${error}`);\n    } finally {\n      setIsComputing(false);\n    }\n  };\n\n  const renderTopoOptControls = () => (\n    <>\n      <ParameterGrid>\n        <ParameterGroup>\n          <ParameterTitle>🎛️ MultiPipe Parameters</ParameterTitle>\n          <ParameterItem>\n            <ParameterLabel>Smooth</ParameterLabel>\n            <SliderContainer>\n              <Slider\n                type=\"range\"\n                min=\"0\"\n                max=\"10\"\n                step=\"1\"\n                value={parameters.smooth || 3}\n                onChange={(e) => handleParameterChange('smooth', parseInt(e.target.value))}\n              />\n              <ValueDisplay>{parameters.smooth || 3}</ValueDisplay>\n            </SliderContainer>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>Cube</ParameterLabel>\n            <SliderContainer>\n              <Slider\n                type=\"range\"\n                min=\"0\"\n                max=\"10\"\n                step=\"1\"\n                value={parameters.cube || 2}\n                onChange={(e) => handleParameterChange('cube', parseInt(e.target.value))}\n              />\n              <ValueDisplay>{parameters.cube || 2}</ValueDisplay>\n            </SliderContainer>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>Segment</ParameterLabel>\n            <SliderContainer>\n              <Slider\n                type=\"range\"\n                min=\"1\"\n                max=\"20\"\n                step=\"1\"\n                value={parameters.segment || 8}\n                onChange={(e) => handleParameterChange('segment', parseInt(e.target.value))}\n              />\n              <ValueDisplay>{parameters.segment || 8}</ValueDisplay>\n            </SliderContainer>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>Pipe Width</ParameterLabel>\n            <SliderContainer>\n              <Slider\n                type=\"range\"\n                min=\"1\"\n                max=\"50\"\n                step=\"1\"\n                value={parameters.pipewidth || 10}\n                onChange={(e) => handleParameterChange('pipewidth', parseInt(e.target.value))}\n              />\n              <ValueDisplay>{parameters.pipewidth || 10}</ValueDisplay>\n            </SliderContainer>\n          </ParameterItem>\n        </ParameterGroup>\n\n        <ParameterGroup>\n          <ParameterTitle>🔧 Mesh Processing</ParameterTitle>\n          <ParameterItem>\n            <ParameterLabel>Round</ParameterLabel>\n            <SliderContainer>\n              <Slider\n                type=\"range\"\n                min=\"0\"\n                max=\"10\"\n                step=\"1\"\n                value={parameters.round || 2}\n                onChange={(e) => handleParameterChange('round', parseInt(e.target.value))}\n              />\n              <ValueDisplay>{parameters.round || 2}</ValueDisplay>\n            </SliderContainer>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>Tolerance</ParameterLabel>\n            <SliderContainer>\n              <Slider\n                type=\"range\"\n                min=\"0\"\n                max=\"100\"\n                step=\"1\"\n                value={parameters.tolerance || 5}\n                onChange={(e) => handleParameterChange('tolerance', parseInt(e.target.value))}\n              />\n              <ValueDisplay>{parameters.tolerance || 5}</ValueDisplay>\n            </SliderContainer>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>MINR (Smaller Than)</ParameterLabel>\n            <SliderContainer>\n              <Slider\n                type=\"range\"\n                min=\"1\"\n                max=\"100\"\n                step=\"1\"\n                value={parameters.minr || 10}\n                onChange={(e) => handleParameterChange('minr', parseInt(e.target.value))}\n              />\n              <ValueDisplay>{parameters.minr || 10}</ValueDisplay>\n            </SliderContainer>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>MAXR (Larger Than)</ParameterLabel>\n            <SliderContainer>\n              <Slider\n                type=\"range\"\n                min=\"1\"\n                max=\"200\"\n                step=\"1\"\n                value={parameters.maxr || 50}\n                onChange={(e) => handleParameterChange('maxr', parseInt(e.target.value))}\n              />\n              <ValueDisplay>{parameters.maxr || 50}</ValueDisplay>\n            </SliderContainer>\n          </ParameterItem>\n        </ParameterGroup>\n\n        <ParameterGroup>\n          <ParameterTitle>🎯 Output Options</ParameterTitle>\n          <ParameterItem>\n            <ParameterLabel>Output Format</ParameterLabel>\n            <ParameterSelect\n              value={parameters.format || 'mesh'}\n              onChange={(e) => handleParameterChange('format', e.target.value)}\n            >\n              <option value=\"mesh\">Mesh (SUBD)</option>\n              <option value=\"brep\">BREP</option>\n              <option value=\"stl\">STL</option>\n              <option value=\"obj\">OBJ</option>\n            </ParameterSelect>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>Quality Level</ParameterLabel>\n            <SliderContainer>\n              <Slider\n                type=\"range\"\n                min=\"1\"\n                max=\"10\"\n                step=\"1\"\n                value={parameters.quality || 5}\n                onChange={(e) => handleParameterChange('quality', parseInt(e.target.value))}\n              />\n              <ValueDisplay>{parameters.quality || 5}</ValueDisplay>\n            </SliderContainer>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>Detail Level</ParameterLabel>\n            <SliderContainer>\n              <Slider\n                type=\"range\"\n                min=\"1\"\n                max=\"20\"\n                step=\"1\"\n                value={parameters.detail || 10}\n                onChange={(e) => handleParameterChange('detail', parseInt(e.target.value))}\n              />\n              <ValueDisplay>{parameters.detail || 10}</ValueDisplay>\n            </SliderContainer>\n          </ParameterItem>\n        </ParameterGroup>\n\n        <ParameterGroup>\n          <ParameterTitle>🔧 Advanced Options</ParameterTitle>\n          <ParameterItem>\n            <ParameterLabel>\n              <input\n                type=\"checkbox\"\n                checked={parameters.preview !== false}\n                onChange={(e) => handleParameterChange('preview', e.target.checked)}\n                style={{ marginRight: '8px' }}\n              />\n              Show Preview\n            </ParameterLabel>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>\n              <input\n                type=\"checkbox\"\n                checked={parameters.optimize !== false}\n                onChange={(e) => handleParameterChange('optimize', e.target.checked)}\n                style={{ marginRight: '8px' }}\n              />\n              Optimize Mesh\n            </ParameterLabel>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>\n              <input\n                type=\"checkbox\"\n                checked={parameters.export === true}\n                onChange={(e) => handleParameterChange('export', e.target.checked)}\n                style={{ marginRight: '8px' }}\n              />\n              Export on Complete\n            </ParameterLabel>\n          </ParameterItem>\n\n          <ParameterItem>\n            <ParameterLabel>Processing Mode</ParameterLabel>\n            <ParameterSelect\n              value={parameters.mode || 'balanced'}\n              onChange={(e) => handleParameterChange('mode', e.target.value)}\n            >\n              <option value=\"fast\">Fast</option>\n              <option value=\"balanced\">Balanced</option>\n              <option value=\"quality\">High Quality</option>\n            </ParameterSelect>\n          </ParameterItem>\n        </ParameterGroup>\n      </ParameterGrid>\n    </>\n  );\n\n  const renderGenericControls = () => (\n    <div style={{ padding: '2rem', textAlign: 'center', color: '#cccccc' }}>\n      <p>This definition has been loaded and is ready for computation.</p>\n      <p>Use the parameters above to customize the computation.</p>\n    </div>\n  );\n\n  return (\n    <Container>\n      <Header>\n        <Title>🎮 Configurator</Title>\n        <Subtitle>Interactive Grasshopper definition configuration and 3D visualization</Subtitle>\n      </Header>\n\n      <ConfiguratorLayout>\n        <ControlPanel>\n          <SectionTitle>⚙️ Controls</SectionTitle>\n\n          <DefinitionSelector>\n            <ParameterLabel>Select Definition</ParameterLabel>\n            <DefinitionSelect\n              value={currentDefinition}\n              onChange={(e) => handleDefinitionChange(e.target.value)}\n            >\n              {definitions.map(def => (\n                <option key={def} value={def}>\n                  {def.replace('.gh', '')}\n                </option>\n              ))}\n            </DefinitionSelect>\n          </DefinitionSelector>\n\n          {currentDefinition === 'TopoOpt.gh' ? renderTopoOptControls() : renderGenericControls()}\n\n          <div>\n            <ControlButton onClick={handleCompute} disabled={isComputing}>\n              {isComputing ? '🔄 Computing...' : '🚀 Generate Geometry'}\n            </ControlButton>\n            <ControlButton onClick={() => window.location.reload()}>\n              🔄 Reset View\n            </ControlButton>\n          </div>\n\n          <StatusPanel>\n            <StatusTitle>📊 Status</StatusTitle>\n            <StatusText>{status}</StatusText>\n          </StatusPanel>\n        </ControlPanel>\n\n        <ViewerPanel>\n          <SectionTitle>👁️ 3D Viewer</SectionTitle>\n\n          <ViewerContainer>\n            <ViewerPlaceholder>\n              <ViewerTitle>🎯 {currentDefinition.replace('.gh', '')}</ViewerTitle>\n              <ViewerDescription>\n                3D visualization will appear here after computation.\n                Adjust the parameters on the left and click \"Generate Geometry\"\n                to see the computed results in real-time.\n              </ViewerDescription>\n              <div style={{ fontSize: '0.9rem', color: '#999' }}>\n                💡 Tip: Try different parameter combinations to explore various design outcomes\n              </div>\n            </ViewerPlaceholder>\n          </ViewerContainer>\n        </ViewerPanel>\n      </ConfiguratorLayout>\n    </Container>\n  );\n};\n\nexport default ConfiguratorPage;\n"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","r","e","toPrimitive","call","TypeError","String","Number","_defineProperty","Object","defineProperty","value","enumerable","configurable","writable","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","Container","styled","div","_templateObject","_taggedTemplateLiteral","Header","_templateObject2","Title","h1","_templateObject3","Subtitle","p","_templateObject4","ConfiguratorLayout","_templateObject5","ControlPanel","_templateObject6","ViewerPanel","_templateObject7","SectionTitle","h2","_templateObject8","ParameterGrid","_templateObject9","ParameterGroup","_templateObject0","ParameterTitle","h3","_templateObject1","ParameterItem","_templateObject10","ParameterLabel","label","_templateObject11","ParameterSelect","input","_templateObject12","select","_templateObject13","SliderContainer","_templateObject14","Slider","_templateObject15","ValueDisplay","_templateObject16","ControlButton","button","_templateObject17","DefinitionSelector","_templateObject18","DefinitionSelect","_templateObject19","ViewerContainer","_templateObject20","ViewerPlaceholder","_templateObject21","ViewerTitle","_templateObject22","ViewerDescription","_templateObject23","StatusPanel","_templateObject24","StatusTitle","h4","_templateObject25","StatusText","_templateObject26","ConfiguratorPage","searchParams","setSearchParams","useSearchParams","currentDefinition","setCurrentDefinition","useState","get","parameters","setParameters","isComputing","setIsComputing","status","setStatus","handleParameterChange","paramName","prev","_objectSpread","_jsxs","children","_jsx","onChange","handleDefinitionChange","definition","target","map","def","replace","_Fragment","type","min","max","step","smooth","parseInt","cube","segment","pipewidth","round","tolerance","minr","maxr","format","quality","detail","checked","preview","style","marginRight","optimize","export","mode","padding","textAlign","color","onClick","async","inputs","entries","_ref","key","Array","isArray","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","log","error","concat","message","disabled","window","location","reload","fontSize"],"sourceRoot":""}