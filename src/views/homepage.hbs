<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SoftlyPlease - Interactive Grasshopper Definitions</title>
    <script async src="https://unpkg.com/es-module-shims@1.8.0/dist/es-module-shims.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Times New Roman', serif;
        }


        body {
            background: white;
            min-height: 100vh;
            color: black;
        }


        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }


        .header {
            text-align: center;
            padding: 40px 0;
        }


        .header h1 {
            font-size: 3rem;
            margin-bottom: 10px;
            color: black;
            font-weight: normal;
        }


        .header p {
            font-size: 1.2rem;
            opacity: 0.9;
            margin-bottom: 30px;
        }


        .main-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-top: 40px;
        }


        .definitions-panel {
            background: #f8f8f8;
            border-radius: 10px;
            padding: 30px;
            border: 1px solid #ddd;
        }


        .definitions-panel h2 {
            margin-bottom: 20px;
            font-size: 1.5rem;
        }


        .definition-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 30px;
        }


        .definition-card {
            background: white;
            border: 2px solid #ccc;
            border-radius: 10px;
            padding: 15px;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
        }


        .definition-card:hover {
            border-color: #666;
            background: #f0f0f0;
            transform: translateY(-2px);
        }


        .definition-card.selected {
            border-color: #333;
            background: #e0e0e0;
        }


        .definition-card h3 {
            font-size: 0.9rem;
            margin-bottom: 5px;
            word-break: break-word;
        }


        .definition-card p {
            font-size: 0.8rem;
            opacity: 0.7;
        }


        .parameters-panel {
            background: #f8f8f8;
            border-radius: 10px;
            padding: 30px;
            border: 1px solid #ddd;
        }


        .parameters-panel h2 {
            margin-bottom: 20px;
            font-size: 1.5rem;
        }


        .parameter {
            margin-bottom: 25px;
        }


        .parameter label {
            display: block;
            margin-bottom: 8px;
            font-weight: normal;
        }


        .parameter input {
            width: 100%;
            padding: 12px;
            border: 2px solid #ccc;
            border-radius: 8px;
            background: white;
            color: black;
            font-size: 1rem;
        }


        .parameter input:focus {
            outline: none;
            border-color: #666;
        }


        .parameter input::placeholder {
            color: #888;
        }


        .solve-btn {
            width: 100%;
            padding: 15px;
            background: #333;
            border: none;
            border-radius: 10px;
            color: white;
            font-size: 1.1rem;
            font-weight: normal;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: 20px;
        }


        .solve-btn:hover {
            background: #555;
            transform: translateY(-2px);
            box-shadow: 0 5px 10px rgba(0, 0, 0, 0.3);
        }


        .solve-btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
            background: #999;
        }


        .viewer-panel {
            grid-column: 1 / -1;
            background: #f8f8f8;
            border-radius: 10px;
            padding: 30px;
            border: 1px solid #ddd;
            margin-top: 30px;
        }


        .viewer-panel h2 {
            margin-bottom: 20px;
            font-size: 1.5rem;
        }


        #viewer {
            width: 100%;
            height: 500px;
            background: #f0f0f0;
            border-radius: 10px;
            border: 2px solid #ddd;
        }


        .status {
            text-align: center;
            padding: 20px;
            margin: 20px 0;
            border-radius: 10px;
            font-weight: normal;
        }


        .status.loading {
            background: #f0f0f0;
            border: 1px solid #999;
            color: #333;
        }


        .status.error {
            background: #ffebee;
            border: 1px solid #f44336;
            color: #c62828;
        }


        .status.success {
            background: #e8f5e8;
            border: 1px solid #4caf50;
            color: #2e7d32;
        }


        .loading-spinner {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid #ddd;
            border-radius: 50%;
            border-top-color: #333;
            animation: spin 1s ease-in-out infinite;
            margin-right: 10px;
        }


        @keyframes spin {
            to { transform: rotate(360deg); }
        }


        /* Navigation Bar */
        .nav-bar {
            background: #1a1a1a;
            padding: 20px 0;
            border-bottom: 4px solid white;
            position: sticky;
            top: 0;
            z-index: 1000;
            box-shadow: 0 2px 10px rgba(0,0,0,0.3);
        }


        .nav-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }


        .nav-logo {
            color: white;
            font-size: 2rem;
            font-weight: bold;
            text-decoration: none;
            font-family: 'Georgia', serif;
        }


        .nav-links {
            display: flex;
            gap: 40px;
            flex-wrap: wrap;
            align-items: center;
        }


        .nav-links a {
            color: white;
            text-decoration: none;
            padding: 12px 20px;
            border-radius: 8px;
            transition: all 0.3s ease;
            font-size: 1rem;
            font-weight: normal;
        }


        .nav-links a:hover {
            background: white;
            color: black;
            transform: translateY(-2px);
        }





        @media (max-width: 768px) {
            .main-content {
                grid-template-columns: 1fr;
            }


            .header h1 {
                font-size: 2rem;
            }


            #viewer {
                height: 300px;
            }


            .nav-container {
                padding: 0 15px;
            }


            .nav-links {
                gap: 20px;
            }


            .nav-links a {
                padding: 8px 12px;
                font-size: 0.9rem;
            }
        }
    </style>
</head>
<body>
    <!-- Navigation Bar -->
    <nav class="nav-bar">
        <div class="nav-container">
            <a href="/" class="nav-logo">
                <svg width="150" height="30" viewBox="0 0 150 30" xmlns="http://www.w3.org/2000/svg">
                    <!-- 3D Cube Axonometric View -->
                    <g transform="translate(5,8)">
                        <!-- Back face -->
                        <polygon points="0,0 12,3 12,15 0,12" fill="none" stroke="#ffffff" stroke-width="1"/>
                        <!-- Top face -->
                        <polygon points="0,0 12,3 18,0 6,-3" fill="none" stroke="#ffffff" stroke-width="1"/>
                        <!-- Right face -->
                        <polygon points="12,3 18,0 18,12 12,15" fill="none" stroke="#ffffff" stroke-width="1"/>
                        <!-- Front face -->
                        <polygon points="6,-3 18,0 18,12 6,9" fill="#ffffff" stroke="#ffffff" stroke-width="1"/>
                        <!-- Bottom face -->
                        <polygon points="0,12 12,15 18,12 6,9" fill="none" stroke="#ffffff" stroke-width="1"/>
                        <!-- Left face -->
                        <polygon points="0,0 6,-3 6,9 0,12" fill="none" stroke="#ffffff" stroke-width="1"/>
                    </g>
                    <!-- Text -->
                    <text x="35" y="20" font-family="serif" font-size="14" fill="#ffffff">SoftlyPlease</text>
                </svg>
            </a>
            <div class="nav-links">
                <a href="/">HOME</a>
                <a href="/examples/">MCNEEL EXAMPLES</a>
                <a href="/topological-optimization/">TOPOLOGICAL OPTIMIZATION</a>
            </div>
        </div>
    </nav>


    <div class="container">
        <div class="header">
            <h1>SoftlyPlease</h1>
            <p>Interactive Grasshopper Definitions</p>
        </div>


        <div class="status" id="status" style="display: none;"></div>


        <div class="about-section">
            <h2>About Me</h2>
            <p>Hello! I'm Peter James Wingo Sancho, a Dalhousie architecture student with a background in environmental design, public health, environmental studies, engineering, and robotics CNC topics. This site showcases my work, and right now I have some resources available under "McNeel Examples".</p>
            <p>I am currently in my Master's of Architecture.</p>
        </div>
        <!-- Removed main-content and architecture-section as requested -->
    </div>

    <script type="module">
        // All viewer-related JavaScript functions and logic removed as requested
        // No definitions to load or render on homepage

        // Status functions
        function showStatus(message, type) {
            const statusEl = document.getElementById('status');
            statusEl.textContent = message;
            statusEl.className = `status ${type}`;
            statusEl.style.display = 'block';


            if (type === 'loading') {
                statusEl.innerHTML = '<div class="loading-spinner"></div>' + message;
            }
        }


        function hideStatus() {
            document.getElementById('status').style.display = 'none';
        }


        // Initialize the application
        window.addEventListener('load', async () => {
            console.log('Homepage loaded.');
        });
    </script>
</body>
</html>
