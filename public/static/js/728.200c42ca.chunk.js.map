{"version":3,"file":"static/js/728.200c42ca.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","pages/McNeelComputeExamplesPage.tsx"],"sourcesContent":["function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n`;\n\nconst Header = styled.div`\n  text-align: center;\n  margin-bottom: 3rem;\n`;\n\nconst Title = styled.h1`\n  color: #ffffff;\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst Subtitle = styled.p`\n  color: #cccccc;\n  font-size: 1.2rem;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst ExplorerLayout = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 2rem;\n  align-items: start;\n\n  @media (max-width: 1200px) {\n    grid-template-columns: 1fr;\n    gap: 1rem;\n  }\n`;\n\nconst ControlPanel = styled.div`\n  background: #1a1a1a;\n  border-radius: 12px;\n  padding: 2rem;\n  border: 1px solid #333;\n`;\n\nconst ViewerPanel = styled.div`\n  background: #1a1a1a;\n  border-radius: 12px;\n  padding: 2rem;\n  border: 1px solid #333;\n  min-height: 600px;\n`;\n\nconst SectionTitle = styled.h2`\n  color: #ffffff;\n  font-size: 1.8rem;\n  margin-bottom: 1.5rem;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst DefinitionSelector = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst DefinitionSelect = styled.select`\n  width: 100%;\n  padding: 1rem;\n  border: 2px solid #444;\n  border-radius: 8px;\n  background: #2a2a2a;\n  color: #ffffff;\n  font-size: 1.1rem;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst ParameterGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1.5rem;\n  margin-bottom: 2rem;\n`;\n\nconst ParameterGroup = styled.div`\n  background: #2a2a2a;\n  padding: 1.5rem;\n  border-radius: 8px;\n  border-left: 4px solid #4ecdc4;\n`;\n\nconst ParameterTitle = styled.h3`\n  color: #ffffff;\n  margin-bottom: 1rem;\n  font-size: 1.2rem;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst ParameterItem = styled.div`\n  margin-bottom: 1.5rem;\n`;\n\nconst ParameterLabel = styled.label`\n  display: block;\n  margin-bottom: 0.5rem;\n  color: #cccccc;\n  font-family: 'Times New Roman', serif;\n  font-size: 0.9rem;\n`;\n\nconst ParameterInput = styled.input`\n  width: 100%;\n  padding: 0.75rem;\n  border: 2px solid #444;\n  border-radius: 6px;\n  background: #333;\n  color: #ffffff;\n  font-size: 1rem;\n  font-family: 'Times New Roman', serif;\n  transition: all 0.3s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #4ecdc4;\n    box-shadow: 0 0 0 3px rgba(78, 205, 196, 0.1);\n  }\n`;\n\nconst SliderContainer = styled.div`\n  position: relative;\n`;\n\nconst Slider = styled.input`\n  width: 100%;\n  height: 6px;\n  background: #444;\n  border-radius: 3px;\n  outline: none;\n  -webkit-appearance: none;\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: #4ecdc4;\n    cursor: pointer;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst ValueDisplay = styled.div`\n  position: absolute;\n  right: 0;\n  top: -25px;\n  background: #4ecdc4;\n  color: #000000;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 0.8rem;\n  font-weight: 600;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst ControlButton = styled.button`\n  background: linear-gradient(45deg, #ff6b9d, #4ecdc4);\n  color: white;\n  border: none;\n  padding: 15px 30px;\n  border-radius: 8px;\n  font-size: 1.1rem;\n  font-weight: 600;\n  font-family: 'Times New Roman', serif;\n  cursor: pointer;\n  margin: 1rem 0.5rem 0 0;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(255, 107, 157, 0.3);\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst StatusPanel = styled.div`\n  margin-top: 2rem;\n  padding: 1rem;\n  background: #2a2a2a;\n  border-radius: 8px;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst StatusTitle = styled.h4`\n  color: #ffffff;\n  margin-bottom: 0.5rem;\n  font-size: 1rem;\n`;\n\nconst StatusText = styled.p`\n  color: #cccccc;\n  font-size: 0.9rem;\n`;\n\nconst TutorialSection = styled.div`\n  background: #1a1a1a;\n  border-radius: 12px;\n  padding: 2rem;\n  border: 1px solid #333;\n  margin-bottom: 2rem;\n`;\n\nconst TutorialTitle = styled.h3`\n  color: #ffffff;\n  margin-bottom: 1rem;\n  font-size: 1.3rem;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst TutorialContent = styled.div`\n  color: #cccccc;\n  font-family: 'Times New Roman', serif;\n  line-height: 1.6;\n`;\n\nconst ViewerContainer = styled.div`\n  width: 100%;\n  height: 500px;\n  background: #000000;\n  border-radius: 8px;\n  border: 1px solid #333;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst ViewerTitle = styled.h3`\n  color: #ffffff;\n  margin-bottom: 1rem;\n  font-size: 1.5rem;\n`;\n\nconst ViewerDescription = styled.p`\n  color: #cccccc;\n  margin-bottom: 2rem;\n  line-height: 1.6;\n`;\n\nconst ExamplesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 2rem;\n  margin-bottom: 3rem;\n`;\n\nconst ExampleCard = styled.div`\n  background: #1a1a1a;\n  border-radius: 12px;\n  padding: 2rem;\n  border: 1px solid #333;\n  transition: all 0.3s ease;\n\n  &:hover {\n    border-color: #666;\n    transform: translateY(-2px);\n  }\n`;\n\nconst ExampleTitle = styled.h3`\n  color: #ffffff;\n  margin-bottom: 1rem;\n  font-size: 1.3rem;\n  font-family: 'Times New Roman', serif;\n`;\n\nconst ExampleDescription = styled.p`\n  color: #cccccc;\n  margin-bottom: 1.5rem;\n  font-family: 'Times New Roman', serif;\n  line-height: 1.6;\n`;\n\nconst ExampleButton = styled.a`\n  background: linear-gradient(45deg, #666666, #888888);\n  color: white;\n  border: none;\n  padding: 12px 24px;\n  border-radius: 8px;\n  text-decoration: none;\n  font-size: 1rem;\n  font-weight: 600;\n  font-family: 'Times New Roman', serif;\n  display: inline-block;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(102, 102, 102, 0.3);\n  }\n`;\n\nconst McNeelComputeExamplesPage: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [currentDefinition, setCurrentDefinition] = useState(searchParams.get('definition') || 'Bending_gridshell.gh');\n  const [parameters, setParameters] = useState<Record<string, any>>({});\n  const [isComputing, setIsComputing] = useState(false);\n  const [status, setStatus] = useState('Ready to explore');\n  const [definitions] = useState([\n    'Bending_gridshell.gh',\n    'BranchNodeRnd.gh',\n    'QuadPanelAperture.gh',\n    'SampleGHConvertTo3dm.gh',\n    'beam_mod.gh',\n    'brep_union.gh',\n    'delaunay.gh',\n    'docString.gh',\n    'dresser3.gh',\n    'metaballTable.gh',\n    'rnd_lattice.gh',\n    'rnd_node.gh',\n    'srf_kmeans.gh',\n    'value_list.gh'\n  ]);\n\n  const handleDefinitionChange = (definition: string) => {\n    setCurrentDefinition(definition);\n    setSearchParams({ definition });\n    setParameters({});\n    setStatus(`Selected: ${definition.replace('.gh', '')}`);\n  };\n\n  const handleParameterChange = (paramName: string, value: any) => {\n    setParameters(prev => ({\n      ...prev,\n      [paramName]: value\n    }));\n    setStatus(`Parameter updated: ${paramName} = ${value}`);\n  };\n\n  const handleCompute = async () => {\n    setIsComputing(true);\n    setStatus('Computing...');\n\n    try {\n      const inputs: Record<string, any> = {};\n      Object.entries(parameters).forEach(([key, value]) => {\n        inputs[key] = Array.isArray(value) ? value : [value];\n      });\n\n      const response = await fetch('/solve', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          definition: currentDefinition,\n          inputs: inputs\n        })\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        setStatus('✅ Computation completed successfully!');\n        console.log('Computation result:', result);\n      } else {\n        const error = await response.json();\n        setStatus(`❌ Error: ${error.message || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Computation error:', error);\n      setStatus(`❌ Network error: ${error}`);\n    } finally {\n      setIsComputing(false);\n    }\n  };\n\n  const renderParameterControls = () => {\n    switch (currentDefinition) {\n      case 'Bending_gridshell.gh':\n        return (\n          <>\n            <ParameterGroup>\n              <ParameterTitle>🏗️ Grid Shell Parameters</ParameterTitle>\n              <ParameterItem>\n                <ParameterLabel>Grid Size</ParameterLabel>\n                <SliderContainer>\n                  <Slider\n                    type=\"range\"\n                    min=\"5\"\n                    max=\"20\"\n                    step=\"1\"\n                    value={parameters.gridSize || 10}\n                    onChange={(e) => handleParameterChange('gridSize', parseInt(e.target.value))}\n                  />\n                  <ValueDisplay>{parameters.gridSize || 10}</ValueDisplay>\n                </SliderContainer>\n              </ParameterItem>\n\n              <ParameterItem>\n                <ParameterLabel>Thickness</ParameterLabel>\n                <SliderContainer>\n                  <Slider\n                    type=\"range\"\n                    min=\"0.1\"\n                    max=\"2.0\"\n                    step=\"0.1\"\n                    value={parameters.thickness || 0.5}\n                    onChange={(e) => handleParameterChange('thickness', parseFloat(e.target.value))}\n                  />\n                  <ValueDisplay>{parameters.thickness || 0.5}</ValueDisplay>\n                </SliderContainer>\n              </ParameterItem>\n\n              <ParameterItem>\n                <ParameterLabel>Bend Angle</ParameterLabel>\n                <SliderContainer>\n                  <Slider\n                    type=\"range\"\n                    min=\"0\"\n                    max=\"90\"\n                    step=\"5\"\n                    value={parameters.bendAngle || 30}\n                    onChange={(e) => handleParameterChange('bendAngle', parseInt(e.target.value))}\n                  />\n                  <ValueDisplay>{parameters.bendAngle || 30}°</ValueDisplay>\n                </SliderContainer>\n              </ParameterItem>\n            </ParameterGroup>\n          </>\n        );\n\n      case 'delaunay.gh':\n        return (\n          <>\n            <ParameterGroup>\n              <ParameterTitle>📐 Mesh Generation</ParameterTitle>\n              <ParameterItem>\n                <ParameterLabel>Points</ParameterLabel>\n                <ParameterInput\n                  type=\"number\"\n                  placeholder=\"Number of points\"\n                  value={parameters.points || 20}\n                  onChange={(e) => handleParameterChange('points', parseInt(e.target.value))}\n                />\n              </ParameterItem>\n\n              <ParameterItem>\n                <ParameterLabel>Influence Radius</ParameterLabel>\n                <SliderContainer>\n                  <Slider\n                    type=\"range\"\n                    min=\"1\"\n                    max=\"50\"\n                    step=\"1\"\n                    value={parameters.radius || 10}\n                    onChange={(e) => handleParameterChange('radius', parseInt(e.target.value))}\n                  />\n                  <ValueDisplay>{parameters.radius || 10}</ValueDisplay>\n                </SliderContainer>\n              </ParameterItem>\n            </ParameterGroup>\n          </>\n        );\n\n      case 'beam_mod.gh':\n        return (\n          <>\n            <ParameterGroup>\n              <ParameterTitle>⚡ Beam Analysis</ParameterTitle>\n              <ParameterItem>\n                <ParameterLabel>Length</ParameterLabel>\n                <SliderContainer>\n                  <Slider\n                    type=\"range\"\n                    min=\"100\"\n                    max=\"1000\"\n                    step=\"10\"\n                    value={parameters.length || 500}\n                    onChange={(e) => handleParameterChange('length', parseInt(e.target.value))}\n                  />\n                  <ValueDisplay>{parameters.length || 500}mm</ValueDisplay>\n                </SliderContainer>\n              </ParameterItem>\n\n              <ParameterItem>\n                <ParameterLabel>Width</ParameterLabel>\n                <SliderContainer>\n                  <Slider\n                    type=\"range\"\n                    min=\"20\"\n                    max=\"200\"\n                    step=\"5\"\n                    value={parameters.width || 50}\n                    onChange={(e) => handleParameterChange('width', parseInt(e.target.value))}\n                  />\n                  <ValueDisplay>{parameters.width || 50}mm</ValueDisplay>\n                </SliderContainer>\n              </ParameterItem>\n\n              <ParameterItem>\n                <ParameterLabel>Height</ParameterLabel>\n                <SliderContainer>\n                  <Slider\n                    type=\"range\"\n                    min=\"20\"\n                    max=\"200\"\n                    step=\"5\"\n                    value={parameters.height || 100}\n                    onChange={(e) => handleParameterChange('height', parseInt(e.target.value))}\n                  />\n                  <ValueDisplay>{parameters.height || 100}mm</ValueDisplay>\n                </SliderContainer>\n              </ParameterItem>\n            </ParameterGroup>\n          </>\n        );\n\n      case 'metaballTable.gh':\n        return (\n          <>\n            <ParameterGroup>\n              <ParameterTitle>💎 Organic Forms</ParameterTitle>\n              <ParameterItem>\n                <ParameterLabel>Resolution</ParameterLabel>\n                <SliderContainer>\n                  <Slider\n                    type=\"range\"\n                    min=\"10\"\n                    max=\"100\"\n                    step=\"5\"\n                    value={parameters.resolution || 50}\n                    onChange={(e) => handleParameterChange('resolution', parseInt(e.target.value))}\n                  />\n                  <ValueDisplay>{parameters.resolution || 50}</ValueDisplay>\n                </SliderContainer>\n              </ParameterItem>\n\n              <ParameterItem>\n                <ParameterLabel>Threshold</ParameterLabel>\n                <SliderContainer>\n                  <Slider\n                    type=\"range\"\n                    min=\"0.1\"\n                    max=\"2.0\"\n                    step=\"0.1\"\n                    value={parameters.threshold || 0.5}\n                    onChange={(e) => handleParameterChange('threshold', parseFloat(e.target.value))}\n                  />\n                  <ValueDisplay>{parameters.threshold || 0.5}</ValueDisplay>\n                </SliderContainer>\n              </ParameterItem>\n\n              <ParameterItem>\n                <ParameterLabel>Scale</ParameterLabel>\n                <SliderContainer>\n                  <Slider\n                    type=\"range\"\n                    min=\"0.5\"\n                    max=\"3.0\"\n                    step=\"0.1\"\n                    value={parameters.scale || 1.0}\n                    onChange={(e) => handleParameterChange('scale', parseFloat(e.target.value))}\n                  />\n                  <ValueDisplay>{parameters.scale || 1.0}x</ValueDisplay>\n                </SliderContainer>\n              </ParameterItem>\n            </ParameterGroup>\n          </>\n        );\n\n      default:\n        return (\n          <div style={{ padding: '2rem', textAlign: 'center', color: '#cccccc' }}>\n            <p>This definition has been loaded and is ready for computation.</p>\n            <p>Use the parameters above to customize the computation.</p>\n            <p>Generic parameters will be applied if specific ones aren't available.</p>\n          </div>\n        );\n    }\n  };\n\n  const getDefinitionInfo = (def: string) => {\n    const info: Record<string, { title: string; description: string; icon: string }> = {\n      'Bending_gridshell.gh': {\n        title: '🏗️ Bending Gridshell',\n        description: 'Parametric gridshell generation with bending analysis and form-finding algorithms. Explore complex curved surfaces and structural optimization.',\n        icon: '🏗️'\n      },\n      'BranchNodeRnd.gh': {\n        title: '🔗 Branch Node Randomization',\n        description: 'Dynamic branching systems with procedural node placement and connection algorithms. Ideal for studying network topologies.',\n        icon: '🔗'\n      },\n      'QuadPanelAperture.gh': {\n        title: '🏠 Quad Panel Aperture',\n        description: 'Adaptive facade systems with customizable panel patterns and aperture optimization for building envelopes.',\n        icon: '🏠'\n      },\n      'SampleGHConvertTo3dm.gh': {\n        title: '🔄 Format Conversion',\n        description: 'Data conversion workflows between different formats and computational methods for interoperability.',\n        icon: '🔄'\n      },\n      'beam_mod.gh': {\n        title: '⚡ Beam Modification',\n        description: 'Structural beam optimization with load analysis and material property adjustments.',\n        icon: '⚡'\n      },\n      'brep_union.gh': {\n        title: '🔧 BREP Union',\n        description: 'Boolean operations and solid modeling techniques for complex geometry creation.',\n        icon: '🔧'\n      },\n      'delaunay.gh': {\n        title: '📐 Delaunay Mesh',\n        description: 'Triangulation algorithms and mesh generation techniques for spatial analysis.',\n        icon: '📐'\n      },\n      'docString.gh': {\n        title: '📝 Documentation String',\n        description: 'Automated documentation generation and metadata extraction from Grasshopper files.',\n        icon: '📝'\n      },\n      'dresser3.gh': {\n        title: '🪑 Furniture Design',\n        description: 'Parametric furniture generation with ergonomic considerations and manufacturing constraints.',\n        icon: '🪑'\n      },\n      'metaballTable.gh': {\n        title: '💎 Metaball Table',\n        description: 'Organic form generation using metaball algorithms and implicit surface modeling.',\n        icon: '💎'\n      },\n      'rnd_lattice.gh': {\n        title: '🌐 Random Lattice',\n        description: 'Stochastic lattice generation with customizable density and connectivity parameters.',\n        icon: '🌐'\n      },\n      'rnd_node.gh': {\n        title: '🎲 Random Node',\n        description: 'Node placement algorithms with spatial constraints and distribution controls.',\n        icon: '🎲'\n      },\n      'srf_kmeans.gh': {\n        title: '📊 Surface K-means',\n        description: 'Clustering algorithms applied to surface analysis and point cloud processing.',\n        icon: '📊'\n      },\n      'value_list.gh': {\n        title: '🎛️ Value List',\n        description: 'Dynamic list manipulation and data structure operations for complex workflows.',\n        icon: '🎛️'\n      }\n    };\n    return info[def] || { title: def.replace('.gh', ''), description: 'Custom parametric definition', icon: '🔧' };\n  };\n\n  return (\n    <Container>\n      <Header>\n        <Title>🧩 McNeel Compute Examples</Title>\n        <Subtitle>Interactive Grasshopper definition explorer - Deploy your own .gh files on the web</Subtitle>\n      </Header>\n\n      <ExplorerLayout>\n        <ControlPanel>\n          <SectionTitle>🎛️ Definition Explorer</SectionTitle>\n\n          <DefinitionSelector>\n            <ParameterLabel>Select Grasshopper Definition</ParameterLabel>\n            <DefinitionSelect\n              value={currentDefinition}\n              onChange={(e) => handleDefinitionChange(e.target.value)}\n            >\n              {definitions.map(def => {\n                const info = getDefinitionInfo(def);\n                return (\n                  <option key={def} value={def}>\n                    {info.icon} {def.replace('.gh', '')}\n                  </option>\n                );\n              })}\n            </DefinitionSelect>\n          </DefinitionSelector>\n\n          <ParameterGrid>\n            {renderParameterControls()}\n          </ParameterGrid>\n\n          <div>\n            <ControlButton onClick={handleCompute} disabled={isComputing}>\n              {isComputing ? '🔄 Computing...' : '🚀 Generate Geometry'}\n            </ControlButton>\n            <ControlButton onClick={() => window.location.reload()}>\n              🔄 Reset Parameters\n            </ControlButton>\n          </div>\n\n          <StatusPanel>\n            <StatusTitle>📊 Status</StatusTitle>\n            <StatusText>{status}</StatusText>\n          </StatusPanel>\n        </ControlPanel>\n\n        <ViewerPanel>\n          <SectionTitle>👁️ Results Viewer</SectionTitle>\n\n          <ViewerContainer>\n            <div style={{\n              width: '100%',\n              height: '100%',\n              background: '#1a1a1a',\n              borderRadius: '8px',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              justifyContent: 'center',\n              color: '#ffffff',\n              fontFamily: '\"Times New Roman\", serif',\n              textAlign: 'center',\n              padding: '2rem',\n              border: '2px dashed #4ecdc4'\n            }}>\n              <div>\n                <div style={{\n                  fontSize: '3rem',\n                  marginBottom: '1rem',\n                  background: 'linear-gradient(45deg, #ff6b9d, #4ecdc4, #ffe66d)',\n                  WebkitBackgroundClip: 'text',\n                  WebkitTextFillColor: 'transparent',\n                  backgroundClip: 'text'\n                }}>\n                  {getDefinitionInfo(currentDefinition).icon}\n                </div>\n                <ViewerTitle style={{ color: '#ffffff' }}>\n                  {getDefinitionInfo(currentDefinition).title}\n                </ViewerTitle>\n                <ViewerDescription style={{ color: '#cccccc', marginBottom: '2rem' }}>\n                  {getDefinitionInfo(currentDefinition).description}\n                </ViewerDescription>\n\n                <div style={{\n                  display: 'grid',\n                  gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',\n                  gap: '1rem',\n                  marginTop: '2rem'\n                }}>\n                  <div style={{\n                    background: 'linear-gradient(135deg, #ff6b9d, #4ecdc4)',\n                    padding: '1rem',\n                    borderRadius: '8px',\n                    textAlign: 'center'\n                  }}>\n                    <div style={{ fontSize: '1.5rem', marginBottom: '0.5rem' }}>🎛️</div>\n                    <div style={{ fontSize: '0.9rem', fontWeight: 'bold' }}>Parameter Control</div>\n                  </div>\n                  <div style={{\n                    background: 'linear-gradient(135deg, #4ecdc4, #ffe66d)',\n                    padding: '1rem',\n                    borderRadius: '8px',\n                    textAlign: 'center'\n                  }}>\n                    <div style={{ fontSize: '1.5rem', marginBottom: '0.5rem' }}>🔧</div>\n                    <div style={{ fontSize: '0.9rem', fontWeight: 'bold' }}>Grasshopper Engine</div>\n                  </div>\n                  <div style={{\n                    background: 'linear-gradient(135deg, #ffe66d, #ff6b9d)',\n                    padding: '1rem',\n                    borderRadius: '8px',\n                    textAlign: 'center'\n                  }}>\n                    <div style={{ fontSize: '1.5rem', marginBottom: '0.5rem' }}>🌐</div>\n                    <div style={{ fontSize: '0.9rem', fontWeight: 'bold' }}>Web Deployment</div>\n                  </div>\n                </div>\n\n                <div style={{\n                  marginTop: '2rem',\n                  padding: '1rem',\n                  background: 'rgba(255, 255, 255, 0.05)',\n                  borderRadius: '8px',\n                  fontSize: '0.9rem',\n                  color: '#cccccc'\n                }}>\n                  💡 <strong>Developer Example:</strong> This demonstrates how to deploy any Grasshopper definition\n                  on the web with interactive parameter controls. Use the sliders to modify parameters and click\n                  \"Generate Geometry\" to see the results.\n                </div>\n              </div>\n            </div>\n          </ViewerContainer>\n        </ViewerPanel>\n      </ExplorerLayout>\n\n      <SectionTitle>🚀 Developer Documentation</SectionTitle>\n\n      <TutorialSection>\n        <TutorialTitle>🔧 How to Deploy Your Own Grasshopper Definitions</TutorialTitle>\n        <TutorialContent>\n          <p>This McNeel Examples page serves as a complete template for deploying Grasshopper definitions on the web.\n          Follow these steps to add your own definitions:</p>\n\n          <h4>Step 1: Add Your Definition File</h4>\n          <ul>\n            <li>Place your `.gh` file in the `src/files/` directory</li>\n            <li>The system will automatically detect and register it</li>\n            <li>Restart the server to pick up new definitions</li>\n          </ul>\n\n          <h4>Step 2: Add Parameter Controls</h4>\n          <pre style={{background: '#2a2a2a', padding: '1rem', borderRadius: '8px', color: '#cccccc'}}>\n{`case 'YourDefinition.gh':\n  return (\n    <>\n      <ParameterGroup>\n        <ParameterTitle>🎯 Your Parameters</ParameterTitle>\n        <ParameterItem>\n          <ParameterLabel>Parameter Name</ParameterLabel>\n          <SliderContainer>\n            <Slider\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              value={parameters.paramName || 50}\n              onChange={(e) => handleParameterChange('paramName', parseInt(e.target.value))}\n            />\n            <ValueDisplay>{parameters.paramName || 50}</ValueDisplay>\n          </SliderContainer>\n        </ParameterItem>\n      </ParameterGroup>\n    </>\n  );`}\n          </pre>\n\n          <h4>Step 3: Add Fallback Parameters</h4>\n          <pre style={{background: '#2a2a2a', padding: '1rem', borderRadius: '8px', color: '#cccccc'}}>\n{`'YourDefinition.gh': {\n  inputs: [\n    { name: 'paramName', paramType: 'Number', description: 'Parameter description' }\n  ],\n  outputs: [\n    { name: 'result', paramType: 'Geometry', description: 'Output geometry' }\n  ]\n}`}\n          </pre>\n        </TutorialContent>\n      </TutorialSection>\n\n      <TutorialSection>\n        <TutorialTitle>📋 Available Definitions</TutorialTitle>\n        <TutorialContent>\n          <p>Here are all the Grasshopper definitions currently available in this example:</p>\n          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '1rem', marginTop: '1rem' }}>\n            {definitions.map(def => {\n              const info = getDefinitionInfo(def);\n              return (\n                <div key={def} style={{\n                  background: '#2a2a2a',\n                  padding: '1rem',\n                  borderRadius: '8px',\n                  borderLeft: '4px solid #4ecdc4'\n                }}>\n                  <h4 style={{ color: '#ffffff', marginBottom: '0.5rem' }}>\n                    {info.icon} {def.replace('.gh', '')}\n                  </h4>\n                  <p style={{ color: '#cccccc', fontSize: '0.9rem' }}>\n                    {info.description}\n                  </p>\n                </div>\n              );\n            })}\n          </div>\n        </TutorialContent>\n      </TutorialSection>\n\n      <TutorialSection>\n        <TutorialTitle>🌐 API Integration</TutorialTitle>\n        <TutorialContent>\n          <p>Use the REST API to integrate these definitions into your own applications:</p>\n\n          <h4>Endpoint:</h4>\n          <pre style={{background: '#2a2a2a', padding: '1rem', borderRadius: '8px', color: '#4ecdc4'}}>\n            POST /solve\n          </pre>\n\n          <h4>Request Example:</h4>\n          <pre style={{background: '#2a2a2a', padding: '1rem', borderRadius: '8px', color: '#cccccc'}}>\n{`{\n  \"definition\": \"Bending_gridshell.gh\",\n  \"inputs\": {\n    \"gridSize\": [10],\n    \"thickness\": [0.5],\n    \"bendAngle\": [30]\n  }\n}`}\n          </pre>\n\n          <h4>Response:</h4>\n          <pre style={{background: '#2a2a2a', padding: '1rem', borderRadius: '8px', color: '#ffe66d'}}>\n{`{\n  \"success\": true,\n  \"data\": {\n    \"geometry\": [...],\n    \"analysis\": {...}\n  }\n}`}\n          </pre>\n        </TutorialContent>\n      </TutorialSection>\n    </Container>\n  );\n};\n\nexport default McNeelComputeExamplesPage;\n"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","r","e","toPrimitive","call","TypeError","String","Number","_defineProperty","Object","defineProperty","value","enumerable","configurable","writable","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","Container","styled","div","_templateObject","_taggedTemplateLiteral","Header","_templateObject2","Title","h1","_templateObject3","Subtitle","p","_templateObject4","ExplorerLayout","_templateObject5","ControlPanel","_templateObject6","ViewerPanel","_templateObject7","SectionTitle","h2","_templateObject8","DefinitionSelector","_templateObject9","DefinitionSelect","select","_templateObject0","ParameterGrid","_templateObject1","ParameterGroup","_templateObject10","ParameterTitle","h3","_templateObject11","ParameterItem","_templateObject12","ParameterLabel","label","_templateObject13","ParameterInput","input","_templateObject14","SliderContainer","_templateObject15","Slider","_templateObject16","ValueDisplay","_templateObject17","ControlButton","button","_templateObject18","StatusPanel","_templateObject19","StatusTitle","h4","_templateObject20","StatusText","_templateObject21","TutorialSection","_templateObject22","TutorialTitle","_templateObject23","TutorialContent","_templateObject24","ViewerContainer","_templateObject25","ViewerTitle","_templateObject26","ViewerDescription","_templateObject27","_templateObject28","_templateObject29","_templateObject30","_templateObject31","a","_templateObject32","McNeelComputeExamplesPage","searchParams","setSearchParams","useSearchParams","currentDefinition","setCurrentDefinition","useState","get","parameters","setParameters","isComputing","setIsComputing","status","setStatus","definitions","handleParameterChange","paramName","prev","_objectSpread","concat","getDefinitionInfo","def","title","description","icon","replace","_jsxs","children","_jsx","onChange","handleDefinitionChange","definition","target","map","info","renderParameterControls","_Fragment","type","min","max","step","gridSize","parseInt","thickness","parseFloat","bendAngle","placeholder","points","radius","width","height","resolution","threshold","scale","style","padding","textAlign","color","onClick","async","inputs","entries","_ref","key","Array","isArray","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","log","error","message","disabled","window","location","reload","background","borderRadius","display","flexDirection","alignItems","justifyContent","fontFamily","border","fontSize","marginBottom","WebkitBackgroundClip","WebkitTextFillColor","backgroundClip","gridTemplateColumns","gap","marginTop","fontWeight","borderLeft"],"sourceRoot":""}