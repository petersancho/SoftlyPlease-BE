{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red13\green13\blue13;\red255\green255\blue255;\red11\green70\blue202;
\red215\green237\blue255;}
{\*\expandedcolortbl;;\cssrgb\c5882\c5882\c5882;\cssrgb\c100000\c100000\c100000;\cssrgb\c2353\c37255\c83137;
\cssrgb\c87059\c94510\c100000;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28\fsmilli14400 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 so welcome everybody it's really nice to to be here my name is luis fraguana and along with\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 0:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 will pearson i will be presenting the workshop on what we call app server with rhino\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 0:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 compute among us we also have steve baer who is another colleague of ours neil and eventually\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 0:33\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i think we should also have david leon who's a colleague of mine at mcniel europe here in barcelona\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 0:40\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i myself deal with a third-party developer support and i do some development will\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 0:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 is also developer also supporting third-party developers will also manages\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 0:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 a lot of the devops and also develops the package manager anything\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 0:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 anything else you want to mention about yourself there will uh jack of all trades master of none\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 probably covers everything yeah good and i guess among you are as i was\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 mentioning people that we've uh we've met before at you know the ac tech\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 event um but as well in other encounters um but i see a lot of new\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh new folks and we're really excited about uh sharing with you what we're trying to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 do with app server and and rhino compute\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:37\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 this is a little bit of how we're gonna go through the the workshop we'll give a little bit of this right\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 now in section one in the intro background and we'll kind of discuss the the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 technologies that we're going to be uh working with uh when we're developing so first we'll give a background on minor compute and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 then we'll discuss this this project called app server then we're going to start to set up our\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:03\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 machines with the code so local setup and debugging we'll take a short break in between that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 then we'll discuss how we actually get all of this deployed remotely and we'll play around a little bit\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so before i start here um if you have any questions at all um i guess you can use\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the ringcentral zoom tools to through the chat or raise your hand i\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:33\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 think amit will be we'll be looking at that and can uh can raise the questions when\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 when they're under there um but yeah please uh please feel free to to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 interrupt it's it's you know strange to do this virtually of course i'm sure you've heard that every time you\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 do any conference or meeting online now during these times we'd much rather have already had some\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 nice bagels and breakfast and baruch college\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 3:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 of course as we're as we're used to but we're happy to to to change the format\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 3:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and do it this way as well so as i was mentioning we're going to start here discussing\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 3:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 rhino compute maybe uh will if you want to maybe\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 3:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 cover cover this section and then i'll cover a little bit about the app server yeah sure\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 3:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um so the having steve in the uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 3:33\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 in the in the room actually because he sort of initiated this this project some very early uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 3:40\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 experiments probably probably going back about two years now um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 3:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and yeah so the iranian computer is essentially\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 3:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 rhino running headlessly with a um just a console application\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 4:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 on top that makes use of a few frameworks um like nancy\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 4:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 in particular a web server framework for net and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 4:13\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it essentially makes the entire um well everything under uh rhino.geometry namespace in\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 4:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 rhinocommon accessible as a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 4:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 as a rest api and and it's intended to be uh as stateless as as possible\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 4:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um so the the server itself doesn't um uh it doesn't remember\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 4:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 what you've done before every every call is is um is it is a new call um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 4:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah and it's all it's open source code's up there on on github just behind luis's head\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 4:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and we've also written uh client libraries so obviously interfacing with a rest api\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 5:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 if you had to write all the code yourself it would be a bit bit of a pain um so we've written libraries for\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 5:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 net javascript and python that just make it a bit more um a bit more fluid\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 5:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so um because the idea for this i'm kind of i'm probably jumping ahead a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 5:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 little bit um i'm just gonna keep talking the idea for this is that it's it's it works in\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 5:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 tandem with um our rhino 3dm libraries um yes we've got three libraries um for\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 5:40\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh c-sharp um javascript and python work in tandem with with rhino3dm which\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 5:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 is um uh our sort of more recent efforts to um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 5:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 our more recent efforts to it to um make open nerves more accessible\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 6:03\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 from from different languages by um uh by wrapping it in javascript and and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 6:09\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 in python and we already had a a wrapper for for c sharp so the idea is\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 6:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that everything you can get at when you're outside of rhino when you're using rhino 3dm to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 6:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 basically describe the geometry there'll be operations that you want to do\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 6:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 those operations which normally you can only do when you're running inside of rhino or now you can make\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 6:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 calls to a compute server and the client libraries are written to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 6:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 make that you know make it as close as possible as if you're just writing regular code inside a rhino plug-in for\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 6:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 instance um to make it nice and nice and fluid\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 6:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so so this is kind of roughly the um the way it's set up uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 7:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i would say we are we are not web developers this has been a a learning experience um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 7:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh but we've definitely learned a lot uh along the way but but the idea you know\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 7:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 this is all um i started out as a bit of a proof of concept and we've just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 7:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 just improved it as we go like all the codes there like some people are using this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 7:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 some people have started again from scratch um yeah we just we just want to provide\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 7:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 kind of the tools you'd need to get like to get going with all of this and this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 7:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 is the way we've the way we've structured it so you've got the um got the api\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 7:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um we've implemented a just a simple token-based um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 7:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 authentication so that you can um uh like very very basic um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 8:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh i should say authorization um so you can control who's actually\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 8:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 hitting your your compute server you've got rhino at the back there\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 8:17\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 running headlessly that's going to be getting its license\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 8:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 from the cloud zoo it's a very important point to make here that uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 8:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 for rhino seven because we're kind of we're exploring running rhino in\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 8:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 a server setting we've developed a new uh licensing mechanism uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 8:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 for rhino when it's running in a server environment so that's if it's running under windows\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 8:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 server or if it's running in a windows container under docker or kubernetes or whatever\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 8:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and that that licensing is called core hour billing so you cannot use your regular um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 9:03\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 seat based perpetual licenses uh whether they're standalone licenses or in a regular zoo or even on the cloud\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 9:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 zoo um when you're running rhino on a server and the reason the reason that that is that it's just not the same as\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 9:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you know one person sitting in front of a computer using using rhino so we have a um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 9:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 a new way um which is much more which is very familiar if you've used\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 9:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 any of like aws or azure or google cloud computing\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 9:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um if you you run rhino on a machine with\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 9:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh say two cores um you'll be charged uh 10 cents per core\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 9:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 per hour so it'll be uh 20 cents\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 9:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 per hour running on running on that machine um yeah just uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 9:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 important point to make and we'll come back to it a bit uh later um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 10:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh can you show the next slide so it's just uh what i already um spoke\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 10:13\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 about exposing the uh rhino.js\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 10:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 namespace as um as a rest api um so so each of these we've\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 10:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 gone through and basically built up an api based on the different\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 10:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 classes and their methods and the different overloads um so you see this here there's you know\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 10:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 search has a number of different overloads in the mesh mesh clash\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 10:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um class yeah i'm probably taking too much time\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 10:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 talking through this don't jump jump ahead um yeah this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 10:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 basically what i was trying to get away from no one wants to do this you could you\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 11:03\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 could write a a compute client in bash if you really wanted to um you may be into that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 11:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 say have at it yeah uh jump to the next one and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 11:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah as i said works in tandem with rhino3dm so you can describe your rhino geometry\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 11:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it's the same runner geometry that lives inside of rhino um it's you know it's it's it's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 11:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 all it all has open ups under the hood so it's not just a um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 11:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it's not just a different like a kind of equivalent it is the same geometry the same\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 11:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um accurate geometrical engine that we all know and love inside of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 11:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 inside of rhino um yeah yeah\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 11:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um yeah so thank you for that uh will um we also should mention that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 12:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um you know the there's a big effort by thornton thomasetti uh core\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 12:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 studio to extend the functionality of rhino compute to allow\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 12:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the solving of grasshopper definitions and a lot of the reason that we're presenting some of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 12:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 this work with you today the app server work is because it's uh it was work that uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 12:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 was done in a hackathon i don't know if it was not two years or three i'm losing track of the years but uh um the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 12:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 group from tt and from the from the event uh created something called rest hopper and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 12:40\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that was merged into the compute uh repository and that's what uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 12:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we'll be using today to remotely solve grasshopper definitions so this is a continuation of some of the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 12:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 work that was initiated at this event which is uh which is pretty cool there i am so let's quickly run over\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 13:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 what this app server is and as i just mentioned yes um rhino\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 13:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 compute includes the ability to solve grasshopper definitions in addition to uh what you saw\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 13:13\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 with the rhino geometry namespace python scripts uh you can even make your own uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 13:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 endpoints as a rhino plug-in and expose the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 13:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 some plug-in methods to compute so you could call that as well\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 13:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 but what we wanted to do with app servers make it much more straightforward to be able to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 13:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 sort of host and solve specific grasshopper definitions so this is you know some of the use cases here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 13:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 would be like having a maybe a product configurator or trying to expose some of the logic that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 13:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you are developing possibly for different projects for for clients but without necessarily having\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 13:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 to give that rhino or rhinophile or i guess in this point grasshopper\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 13:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 definition put it somewhere where that doesn't have to be actually exposed directly to to a user so um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 14:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 here to to just kind of go over what app server is it's a it's a node.js open source it's a node.js project\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 14:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 nodejs probably you you most of you know but it's a open source cross-platform back-end javascript runtime environment\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 14:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh that executes javascript code outside of a web browser um and it also app server also takes\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 14:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 advantage of express.js which is let's say a kind of the de facto standard server framework for node.js\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 14:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 again it's a it's another open source project mit licensed it allows essentially to to build web\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 14:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 applications and apis and that's exactly what we're using it for to create this uh very basic rest api\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 14:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it includes support for for caching of some of these solutions to try to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 14:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 let's say speed up a little bit the the communication between the client the back to rhino compute and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 15:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and back to the client so if for example a grasshopper definition\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 15:09\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 is solved with the same or is requested to be solved with the same parameters um app server caches that and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 15:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it doesn't even call rhino compute in those instances and we'll see how a little bit of how that works uh we'll talk about what what options we\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 15:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 have for caching later um yeah and yeah it's open source so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 15:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 just like the compute architecture diagram we attempted to make a architecture diagram for app server and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 15:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 here of course we have um so you can see essentially the the main takeaway from this is app\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 15:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 server sort of sits between your clients and rhino compute so it's a place where you can\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 15:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 have a very basic api it just exposes three endpoints with a few different methods of accessing them so we have an\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 15:57\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 index endpoint a solve endpoint definition we'll talk about these endpoints\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 16:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so here the the api um basically just to allow you to solve\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 16:13\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and get some information about the grasshopper definitions that are stored within the files these definitions are served\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 16:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 publicly they're only made available via the definitions endpoint which requires the calling server to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 16:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 know that definitions uh let's say id which we calculate in the app server\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 16:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and um so you can see here this is let's just go right to the to the api\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 16:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 as you see it's not you know as extensive as what compute exposes but again this is meant to be\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 16:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 just something simple to give you a couple of tools to to to solve definitions and of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 16:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 course it's extendable um so the the root endpoint just shows you the name of the definitions on the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 16:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 server um so whatever's in the in the files directory it's going to show you which\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 16:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 grasshopper definitions are there if you call let's say the root with the name of the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 17:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 of the definition itself it'll actually call compute an endpoint we have there and it'll return the different endpoints\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 17:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and the inputs and outputs of the of the definition and their types so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 17:17\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we'll see how this works a little bit later and then we have the main endpoint that we're going to be\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 17:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 looking at is the solve endpoint and that either takes um let's say\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 17:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it's either a post with the data of the definition of the parameters than the body of the request\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 17:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 or you have you can also use query parameters with get so you can have the definition\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 17:40\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 name and all the parameters uh in the let's say in the url\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 17:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um let's see if there's anything else i want to cover here um yeah the as i mentioned the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 17:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 definition uh endpoint is since essentially upon starting app server\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 17:57\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh we calculate a hash for the definition contents and that's used as an id for the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 18:03\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 definition sort of a path to the definition uh and that's definition is what app\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 18:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 server gives rhino compute so when that rhino computer is asked to solve a particular definition\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 18:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it let's say request the definition from that particular path and then the first time\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 18:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the rhinocompute uh request that definition run a compute let's say downloads the definition there\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 18:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and caches the definition so again there's a caching aspect of rhino compute that's important here also to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 18:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 try to make things as snappy as as possible so really you get a let's say a latency a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 18:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 hit downloading definition the first time you access it but after that um it should use the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 18:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 cache definition um i'll just jump in and say something quickly about the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 18:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 about that list that um so the solve is accessible both via a post\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 18:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 request and and via get and and by extension a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 19:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 head request and that's that's probably to do with um browser caching so by by exposing a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 19:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um a an endpoint that uses the get http method\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 19:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh with um query parameters we can make use of uh in browser caching or\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 19:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you could put a what am i trying to think a cdn in in in\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 19:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 front of this and and cash at the edge um i'm saying these words like i\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 19:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i know what they mean um but uh but yeah it's just it's all been a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 19:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um an exploration to like the end goal being that like holy grail of taking\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 19:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 your grass up a definition and throwing it up to the web and having it being like super reactive um and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 19:51\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and a lot of that is caching yeah and we'll look at well here this is\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 19:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the the cache support so there's two mechanisms for caching that we\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 20:03\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 have been working with in app server project uh first one is node cache which is a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 20:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 in memory cache um and that's you know your your own memory\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 20:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 memory that the memory where app server is running the memory of the computer or\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 20:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 app server is running that node cache persists only\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 20:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 within the the running instance of app server so if you restart app server for whatever reason\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 20:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that cache is destroyed there's another option that we've also\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 20:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 been uh working with which is memcached which is uh let's say similar to node cache\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 20:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 except it's not on the same server as app server is running i mean it could be\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 20:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 but in this case it's uh it's let's say a cache that persists even if uh the app server\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 20:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 is restarted so we'll we'll see an example of how that's working in our\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 21:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 remote deployment of app server but it's uh let's say a more robust uh persistent cache\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 21:09\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that sticks around um we one thing that's also important to know that we have a few open issues about adding code\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 21:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 for cases where maybe you might not want to cache the solution maybe there's an error coming through or maybe\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 21:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 a certain combination of of um inputs for grasshopper definition\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 21:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 just generates a solution that's not interesting for you so we're thinking about ways to support\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 21:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 also when not to cache things\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 21:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so for deployment so to get app server actually somewhere where somebody else\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 21:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 besides you can access it we've been using a platform called heroku enables developers to build run\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 21:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and operate applications entirely in the in the cloud so it's it's very easy to use we've\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 21:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 tried other things really you can run app server wherever you can run node.js\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 22:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so that's uh promising but um yeah heroku just gives us\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 22:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 a lot of tools to facilitate teaching you how to get this onto a remote deployment i have some\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 22:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 notes here that the compute server must be accessible from the app server and vice versa to fetch the grasshopper definitions\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 22:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and later on we're going to be using aws to host a compute to show you how to provision a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 22:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 compute server when we demo the remote deployment um it's possible to host app server\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 22:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 on the same machine as as apps app server and rhino compute so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 22:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that's it's also possible you can also use docker docker swarm or kubernetes to deploy deploy app server so this is just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 22:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 to mention that this is one way we're showing you one way to go about it but of course uh all of you have a varying experience\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 22:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and have probably already tried a lot of other things a lot of other platforms um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 23:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so i think we're right on time to to get started with local setup and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 23:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 debugging before we go on is there are there any questions about this this uh general background um we've\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 23:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 tried to kind of cover uh the the different pieces that we're gonna be working with is there any any\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 23:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 questions that you have right now\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 23:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 crickets okay well let's uh let's continue on here maybe\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 23:33\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 just one question how does it compare to shape diver this framework uh i don't know because i\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 23:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 don't develop shaped ever i know how shape diver is developed in the background but i\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 23:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 mean basically they have a lot more time and probably a lot more experience a lot more cleverness and how to develop\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 23:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 all of the stuff for the web i think they've had a lot more experience understanding what kind of definitions\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 23:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 run well versus which kind of definitions don't run well they have a lot more experience probably\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 24:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 on how to support third party plugins properly how to extend it so that you have a you\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 24:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 know more of a robust let's say extensive api around getting access to things in the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 24:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 definition probably a lot more experience in how to render these things and convert geometry so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 24:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you know they they you know that's this is a they're running a a professional\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 24:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 service for anyone to go in there and you know host their definition this is more let's say uh uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 24:37\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the do it yourself method or or a starting point to be able to develop your own place or your own projects uh to serve your\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 24:44\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 own grasshopper definition logic yeah i'll just say a couple of things as well um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 24:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 without uh showing too much about about how they actually do things because that's part of their um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 24:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 their part of their business of course uh they i said like compute has been around for\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 25:03\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 maybe about a couple of years um uh companies like like shape diver um uh white lioness um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 25:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and you know uh pack hunt um they've been around for a bit longer um a lot of these um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 25:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you know they're the these these companies started with rhino six and none of this was\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 25:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 possible in rhino six um what what what this project really is about is is saying okay a lot\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 25:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 of people are trying to do this they're they're running rhino on old computers that are shoved underneath\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 25:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 desks and every now and again someone has to log in and close some uh some dialogues um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 25:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and and through this project we've we've really tried to clean up a lot of things um to to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 25:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 make rhino behave a lot better when it's running in that kind of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 25:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 headless environment um so it's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 26:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the way i see it is if if um shape diver started tomorrow they would\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 26:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 they would most likely build off of um compute and build up of this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 26:17\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 framework that that we've created um but they didn't um so they may not\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 26:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um but yeah but also we should mention uh jordan to mercedes\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 26:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 swarm uh which is using uh rhino compute and they're using some of the things they developed\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 26:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 with rest hopper to also provide a platform for designers to host their their\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 26:44\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 grasshopper definitions so that is a platform that is using rhino compute\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 26:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um i did have a question that's all right sorry it's a little large pipe up\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 26:57\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um did you did you say you could expose plugins to this app server api including like custom plugins you can\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 27:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 create uh your own let's say rhino plugin that runs on the rhino compute server so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 27:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it would be essentially you would add that plug-in to the to the rhino instance running on\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 27:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that on the rhino compute server in that plugin actually steve developed a way to expose\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 27:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh methods from your plugin as endpoints to rhino compute so that would just become another thing\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 27:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that you could call either straight away directly from from a client to rhino compute\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 27:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 or you could develop an endpoint and an app server to to call that that endpoint\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 27:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we don't have a we don't have a i don't think we have a document on that but we have a post on discourse which i can\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 27:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 link to which shows you how to how to do that i just i just threw it in the chat\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 27:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 excellent thank you we're just just so in sync thank you very much\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 28:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um i had one more question as well that's all right did you also mention that this rhino\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 28:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 computer is running rhino on uh like a docker image or\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 28:13\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 something in the cloud is that what it was i heard something about windows image and rhino sitting running on that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 28:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um it it's uh what i say is it's a possibility\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 28:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so it uh what we're going to talk about today is is rhino running in just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 28:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 just on windows windows server but i've done a fair amount of testing\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 28:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 as well with windows containers um and it at least works inside\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 28:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 a um either like a docker container or as part of a like kubernetes or\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 28:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 docker swarm cluster um it's it's an option\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 29:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh i assume that's headless oh yeah yeah yeah i may bother you about that in\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 29:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 break thank you that's all my questions sure all right um all right let's get\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 29:17\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 let's get doing some setup and debugging so here we're going to essentially go through three steps\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 29:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we're going to basically download start and play around with rhino compute\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 29:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh then we're gonna actually clone the repository for rhino compute\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 29:33\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh start that debug that and play some more and then we're gonna do uh finally clone start and debug uh app\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 29:40\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 server so um maybe do you want to take this away will yeah\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 29:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah i will share my screen\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 29:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 which i've done my best to uh tidy up um yeah is the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 30:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it's the size of everything on here um okay\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 30:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i'm seeing i'm seeing thumbs cool right so let me pull that over here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 30:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 [Music]\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 30:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 let's come out of here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 30:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 make sure in the right place all right so uh we realized that they're like\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 30:33\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 there's you know there's a bunch of different people um in this in this workshop and people are\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 30:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 going to have different interests um some might be interested in the like the the back end stuff running um i say\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 30:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 back in the back end back end running compute some some might be more interested in the um uh the like the node\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 30:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 server part of it so might be more interested in the um like the front end the the browser code\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 31:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um so what it decides to do is to show both um sort of the plug and play\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 31:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um running a compiled version of rhino compute um so we have um as you can see here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 31:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 this is the repository um and we just have a continuous\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 31:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 integration system app there in this in this instance running running builds so for any any\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 31:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 any one of these i could just go and grab the um the build you could ignore the deploy\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 31:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 one that's that's for we have a staging server that automatically\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 31:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 deploys make sure nothing nothing breaks but yeah and we threw a link\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 31:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 in the slides um does everyone have the i think luis\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 31:57\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 threw a link to the slides in the um in the chat\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 32:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um it's very helpful if you've if you've got the slides open on your on your screen because there's uh a few\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 32:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 links and things in there that that will be clicking okay\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 32:13\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so just go ahead so i threw a link in here for the the latest um compiled version of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 32:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 of of compute i'm just going to download that now\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 32:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 of course while i'm unzipping this and say i've got the the latest rhino 7\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 32:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 beta installed and i've already run it um i'm i'm signed in with a um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 32:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 with a rhino account on this machine uh you because this is windows 10 um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 32:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you can use um any of the standard licensing method standalone zoo cloud\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 32:57\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 zoo whatever but the important point to make is that you should have already in fact i'll do\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 33:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it now but open rhino uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 33:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 then it's already it's already signed in it's already uh licensed um and it's working\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 33:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we don't want to be debugging licensing issues when running rhino on a on a command line it's not it's not fun and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 33:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it and it doesn't it's not really possible um okay\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 33:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 lewis could you just uh mute actually i'll just i'll meet you for you\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 33:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um so uh i've just i've unzipped this um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 33:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh download and in there there's one executable and that's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 33:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 compute.geometry.exe let me just so i'm not hiding this so i've unzipped it and i'm going to double click\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 33:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 on compute.geometry uh i ran to this earlier it's um it\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 34:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i'm telling you it's from us it's your decision whether or not to run this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 34:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um but um but this is our code\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 34:13\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh so you can see that it's just starting up now\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 34:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so what it's doing is it's um it's just using all the default settings\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 34:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and it's starting up a local web server on a local host listing on port 8081\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 34:33\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that's just by default and so when we get this message the computer\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 34:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 geometry service is now running it is in fact running\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 34:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and i'm going to go off script slightly um i can go over here and i can type in\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 34:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh localhost clearly i've done this before 8081 and and i was like going to the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 35:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 version endpoint this is an endpoint we wrote just to kind of display the version information about\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 35:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the um uh what computers and you can see it matches the version information that's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 35:13\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that's at the top of the compute window there and also tells us um because it's it's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 35:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 using these these uh i guess um daily builds tells me that the git commit that this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 35:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 was built from which is all more useful stuff okay i'll jump back on script so we've\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 35:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 got um uh some samples that luis prepared um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 35:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so let's go and download those\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 35:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 clicking all of the buttons\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 35:51\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and i'm going to unzip that directory as well\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 36:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 okay all right so i'm gonna make use of a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 36:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 neat feature in visual studio code\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 36:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so i'm just going to drag that guy in here so essentially got visual studio code\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 36:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 opened at this samples directory\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 36:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and luis put in the um the sort of prerequisite instructions um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 36:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you've got visual studio code and the live server extension super useful for\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 36:37\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 stuff like this so i've got this little go live button down at the bottom i can hit that and it will open up a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 36:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 browser essentially just same thing that people use you know the simple http server in in\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 36:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 python for or or node to just spin up a web server that's that's that's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 36:57\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um hosting the uh particular directory okay so if i get um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 37:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 let's close some of these things down so here i've got the um the output\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 37:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 on the on the left from compute and if i start uh let's look at\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 37:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the first sample oh i was super fast but of course it's it's it's on the same computer um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 37:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so we can see over on the left that uh a request has been made to the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 37:33\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 computer server so it hit the uh mesh clash i said a mouthful mesh clash search\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 37:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 endpoint and this is just a you know relatively straightforward\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 37:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 sample just showing how you can hit regular rhino common\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 37:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um endpoints um via compute if i go back\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 38:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 or do this other one this is a bit of a famous sample from from luis oh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 38:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it's the classic classic yeah yeah and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 38:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 this is essentially a grasshopper definition and you can see it's hitting the grasshopper end point\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 38:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so each time i each time i poke something it's i forget exactly the way it's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 38:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 written but it's um potentially sending a grasshopper definition and a set of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 38:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 inputs to compute and it's being solved\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 38:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and then it's getting back a mesh and we're then rendering the mesh using uh 3js so we've got a few\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 38:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um i say this this will be using rhino rhino3dm um uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 39:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the compute uh library for for for javascript um we got some hooks into um extended\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 39:09\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 rhino 3dm on javascript a little bit so that it has some helper methods for going to and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 39:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 from um 3gs geometry so it makes it super easy get a mesh in from compute decode it\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 39:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 with rhino 3dm and convert it to a 3gs 3js mesh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 39:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 or pretty pretty straightforward and i was saying before that's kind of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 39:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that's the goal with this is to provide the tools to be able\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 39:40\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um to do these things all right i'm going to jump on so we've\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 39:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 gone through we've reviewed the compute console outputs okay so i said\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 39:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i'm going to close this so i'm just going to hit control c but i could also just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 40:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 close the window so yeah the second part of this um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 40:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 for those who are like interested in um the you know in in the code of compute\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 40:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and and want to be able to debug any any issues because you know we're\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 40:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 free to admit that there may well be issues this is an ongoing project uh said to to make rhino a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 40:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 traditionally a desktop application play nicely as a as a web server um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 40:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um but you know as always if anyone runs into any issues you know we're here and willing to more\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 40:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 than willing to um to to help um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 40:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so yeah so we have the short guide on the um compute um i'm just gonna\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 41:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 [Music] put this over to the side so this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 41:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 short guide um on the compute repository that just describes the process of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 41:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 getting the code getting set up it's it's it's very very simple pretty much boils down to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 41:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 get the code run it in visual studio um so let's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 41:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 [Music] close this one so i'm going to use git\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 41:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 to to clone the repository um so i'm going to copy the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 41:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh copy the https url to the repo um i just opened a terminal i'm using\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 41:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 windows terminal um anyone else who's a windows user who hasn't tried windows terminal yet i\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 41:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 recommend giving it a go um powershell works just the same this is just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 42:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 a slightly prettier powershell shell i guess\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 42:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so i'm just going to go into the desktop and again if you're a this isn't really a workshop\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 42:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 about using git but they're like um so i'm just gonna do it the quickest way um you can also just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 42:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 download a zip of all the code you can use github desktop a bunch of options so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 42:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i'm going to clone this repository\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 42:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um and inside here inside source\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 42:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 there is a compute solution file so i'm just going to open that up in visual\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 42:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 studio and i think there is so this project uses a bunch of nuget packages\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 43:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 generally um these days visual studio seems to be pretty good at um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 43:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 just doing all that stuff uh for you um but of course i can come over here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 43:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and i can restore nuget packages just to make sure it looks like i didn't really do anything\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 43:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um and okay what was next on the so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 43:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 open the um we've opened the solution file and this is suggested let's put a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 43:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 breakpoint line 62 of rest hopper endpoints so i'm gonna find\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 43:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 rest hopper endpoints another like little tip this this thing\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 43:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 is like super useful it's a nightmare if you switch between windows and mac\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 43:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 using control q but it's uh yeah it's super useful especially for\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 44:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 big big projects so let's pop a breakpoint on line 62.\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 44:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um and let's start debugging so it's already set up by default it's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 44:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we're in um in debug and this is a 64-bit\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 44:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um project because rhino is 64-bit um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 44:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 let's go so it'll look very similar to um when we loaded it before uh there's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 44:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 a small configuration difference and that we get this um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 44:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we see these uh debug log lines as well so we get a little bit more insight into\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 44:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 what's going on inside but it's essentially exactly the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 44:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 same so service is running now i'm just going to minimize\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 45:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 visual studio and again let's go here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 45:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so it's just the same obviously we don't have the same version and get information\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 45:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 but it's still showing that it's running that's the version number four uh this week's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 45:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh rhino beta and you can see it's been been hit um there\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 45:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i'm going to um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 45:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 just going to restart the live server for those for those samples\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 45:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 keep that console open and we can hit it and so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 45:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the mesh clash because it's just pure rhino common that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 45:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 works as normal if we go back and we go to the spiky thing\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 46:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 now we're now we're debugging\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 46:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um yeah so we can see that um we can see\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 46:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 exactly what um uh let's just jump ahead\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 46:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um and then we can see exactly what um has been sent and oh yeah it's not\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 46:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 really very readable but you can see that the that sample has actually sent the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 46:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 grasshopper definition as a um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 46:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it's a it's encoded the binary file into base64 so that it can kind of shoehorn it into a adjacent\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 46:57\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 payload\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 47:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and part of that as well is inside that payload will also be a set\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 47:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 of inputs um yeah\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 47:17\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so we can step through and see doing all the stuff so here it's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 47:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 going to um oh i see a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 47:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 oh no that's it i thought someone was requesting access to control my screen but it wasn't it was\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 47:37\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 chat um uh yeah so here it's it's decoding that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 47:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that base64 um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 47:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 if we step over um and inside there now we've got a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 47:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 grasshopper definition um so this is just a class that was\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 48:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 written just to kind of encapsulate that that sort of input payload and we can see that there's a bunch of stuff\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 48:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um yeah i say i want to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 48:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 try and keep it somewhat um high level so that we can cover cover a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 48:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 lot of stuff but just to give you guys a bit of a taste and you know anyone who knows us knows that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 48:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we're always available to uh answer questions and um and whatnot\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 48:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so i'll um the other if you want to uh take over and and talk a bit about\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 48:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the uh the app server sounds good\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 48:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i'll stop sharing my screen\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 48:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 all right so before we go on are there any questions on what will's just covered so it was just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 49:03\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 a first step was just downloading a compiled version of compute running that making sure you can hit that with one of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 49:09\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the samples uh then we actually got the code so you can do more stuff deep debugger you can see how\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 49:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you know as well mentioned how all the data comes in um we have a question here i'm opening\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 49:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 compute sln in visual studio i see zero projects in the solution explorer how can i fix this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 49:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 what version of visual studio\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 49:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 2019 well i did have to just download the uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 49:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 4.6.2 dot net framework so that's ah okay let's say that's yeah that that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 49:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that that could well could well have been it um yeah it's this the project uses\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 50:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um 4.6.2 um you rhino rhino itself um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 50:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 now requires a 4.8 runtime um yeah it's i guess\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 50:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it's a q it's all generally a question of when you last installed uh visual studio um but yeah that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 50:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 probably that sound that sounds like it was probably the main what was causing that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 50:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 paul can you open up dev tools and see if there's anything being recorded there\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 50:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah it's definitely the first first port of call if if if you're looking at a um one of these\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 50:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 samples and it doesn't seem to be doing anything i'll just let me just um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 50:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 show my screen again quickly um so i should already have this open so so this one for instance um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 50:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i can never remember what the um control shift uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 51:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 ctrl shift i it's up there\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 51:09\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um yeah so first first protocol is is just always to look at the um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 51:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the console um because if there's any if there's any issues then it will then they'll pop up down\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 51:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 here so for instance if i was to stop compute and then if i was trying to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 51:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 click on one of these things um yeah here we go so it\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 51:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 tells us that it's it can't get through yep\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 51:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 can we show again how we use the live server extension yeah\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 51:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 [Music] so i'm in um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 52:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 oh let me just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 52:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the most underrated feature of windows um so i'm in visual studio code\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 52:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and in directory that contains the the samples um the link to which\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 52:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 is in in the uh in the slides and to go to extensions i have\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 52:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the um should yeah so this is the live server\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 52:37\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um extension this is the the wrong one by ritwik day\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 52:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um and if i just stop that at the bottom you\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 52:51\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 get this little go live button um and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 52:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 if you hit that it just defaults to port\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 53:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 5500 i don't know what it'll do if you're already using that port\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 53:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 but it'll just automatically open up a browser that's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 53:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the workspace inside of visual studio code so i can see here just as i can see here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 53:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i've got clash detection and spiky thing i've got those two right here i can just go in and of course none of them are going to work\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 53:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 because computer isn't running anymore um yeah hopefully that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 53:40\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 makes that a little bit clearer\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 53:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah yep you want to see that again we'll go one more time\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 54:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 close that yeah as i said i don't know if it's maybe\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 54:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it's um uh because it's it's small so i'm just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 54:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 in in here is my code and it's this little guy right down the bottom here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 54:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i'll just leave that there for for a moment awesome\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 54:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 all right\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 54:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so i guess paul um maybe uh first check of course uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 54:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 kind of stuck is is compute running so if you look at uh for example here let me see if i can\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 54:51\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 bring this up do you have compute running does it\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 54:57\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 eventually have something that says here the compute geometry service is now\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 55:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 running also check the version like will show um so i think it's running but uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 55:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah for the two examples uh spiky thing and mesh clash it's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 55:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you i still have the loading sign and you can hit the version\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 55:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh yes i can hit the version this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 55:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um okay well maybe i don't know maybe we can do a breakout room uh will will i start\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 55:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh discussing the app server yeah that sounds good i mean could you\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 55:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 pull myself and um uh paul in into a breakout room and i'll see if\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 55:57\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i can try this out for him yeah i think i should just look and do it give me a second yes\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 56:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 all right so marco it seems one thing we should check here before we continue on is um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 56:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 in visual studio can you check in your reference\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 56:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 references and see if you have all of the all of the nougat\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 56:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 packages restored um yeah they appear they appear to be restored and you have rhino and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 56:33\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 this rhino inside one no okay that one i don't have\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 56:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 okay i believe that's where i'm not mistaken steve that's where rhino windows dll is\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 56:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um is that something i could download from nougat packages no you shouldn't have to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 56:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 do that because the project already has it i think the best thing probably to do um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 56:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 would be to restore packages let me see here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 57:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you can also do like uh there's a few ways to to get this to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 57:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 happen so references manage nougat packages\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 57:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so if you look at installed you see you are seeing some stuff installed um yes but nothing called rhino\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 57:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 or rhino inside right you know no rhino stuff\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 57:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 sorry uh who was the second person who wanted to join well in the breakout room\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 57:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 say again uh the second person who wanted to join will at the breakout room i believe it was\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 58:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 paul paul um here i'm wondering if we could do do\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 58:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 do we have the ability on it to do another breakout room with maybe uh i would call on steve to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 58:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 to get in there with marco sure okay i think i can do that give me a second\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 58:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 all right thank you cool thanks\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 58:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 learning learning as we go here to you know usually we go over to your\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 58:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 computer and see what's happening um but that it sounds to me like\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 58:37\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 something about restoring the packages for some for whatever reason didn't work um so let's get back to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 58:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um getting our code and moving on to the next part which is uh getting the the code for app server\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 58:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so we do have an installation guide but essentially what we're gonna do is um you know these three these three steps\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 59:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so let me just uh go to and up some of these and i'll show you here what i'm doing\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 59:13\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so i have a command line\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 59:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 let me show you here on my screen okay so i'm gonna\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 59:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 just go into a directory where i'm just keeping all the files um so and i'll clone the repository here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 59:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 let me grab that link and i'll post the link here to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 59:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 just um just in case anyone else is saying the same as me the uh your screen is pretty pretty blurry\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:00:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um i'm just going to mention that in case in case any anyone else is seeing this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:00:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah blurry screen okay that's right are you actually sharing the screen or is this are we\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:00:13\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 somehow looking at your [Music] camera resolution or something like that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:00:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um hold on let me see if i can fix this one moment please\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:00:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it was it was really clear before louise so something changed recently okay uh so like when i do this is it\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:00:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 clear it's still a little blurry i mean\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:00:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i think it's still blurry it's just that the words are bigger so it feels a little less blurry but it's still blurry\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:00:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 okay\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:00:51\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 anything changing i'm just turning off a few things here oh all right let me see\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:00:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 if i can do something here can i share this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:01:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 is this any better yes much better absolutely\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:01:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 much better that's it all right so we'll try this out here now um and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:01:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 let me just do something here okay so now that we manage the screen so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:01:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 what i'm doing is i'm just going to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:01:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 copy uh so we're going to run these three lines first we're going to clone the repo we're going to go into that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:01:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 directory and then we're going to install the dependencies so go ahead and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:01:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 paste that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:02:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 then i'm going to change into compute dot app server\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:02:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and then i'm going to run npm how many times have you run num npm i to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:02:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 install the dependencies\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:02:40\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 this happened to me before and command\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:02:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 okay so you should be getting\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:02:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 a bunch of stuff being downloaded into node modules\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:03:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and after well i guess we can also do it during let's go ahead and open the project in visual studio code\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:03:57\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so um just to take advantage of what we have here in studio visual studio code um we'll also\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:04:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 run some debugging um i guess while we're here we can discuss a little bit the structure of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:04:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the project we have a couple of directories here in\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:04:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 source which is where of course the main code there's a lot of different editor files and of course the package\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:04:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 package.json which defines some of the dependencies of the project and the scripts which can be run\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:04:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the main entry point of the [Music] the code is here in bin www which is\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:04:40\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 standard for express project if anyone is familiar with the express framework\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:04:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we started this to create this code just with the express generator which\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:04:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 they it's just a command line tool to to start a basic express project so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:05:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we're not doing anything anything too too crazy um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:05:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and then eventually we have the app and then the routes which is where\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:05:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the the different code for accessing a different route so first i want to look\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:05:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 at the index dot js this is in source\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:05:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 maybe i'll just you can see it pretty well i guess in your computer but so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:05:33\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 if you haven't used express before it's i mean i hadn't used it before working on app server so i got to learn\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:05:40\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 this as i went along but it's it makes creating these apis pretty pretty straightforward so here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:05:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 what we do when we hit the the roots of just you know the local host\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:05:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 3000 whenever we start debugging we're just going to get a list of the definitions on the server\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:05:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and then if you actually put the definition name you'll get some information about that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:06:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so let me just first make sure that we have uh i don't think we have rhino computer running here so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:06:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we go ahead and start that because otherwise i'm not going to be able to to do this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:06:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 but while that is starting up i'm going to go ahead and continue talking about this um so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:06:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the the root the first endpoint index endpoint doesn't actually call\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:06:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 compute for anything it just when we start here when we start the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:06:33\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 application we actually um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:06:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 look at what is in the files directory so we have a method here that looks\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:06:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and actually looks at the file system and takes a look at all the definitions\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:06:51\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and actually uh creates uh just an object which has\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:06:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 information about the definition that's also when the definition contents are hashed and an id is created\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:07:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 this is here in the source register definitions okay so it gets\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:07:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 files it goes through each of the files in that files directory and it creates a little\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:07:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 object with the name of the file a hash for the id\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:07:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and eventually the full path to it\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:07:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 okay then after that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:07:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so that's when so when we go back here to the get that's where it's actually fetching these definitions from and it's gonna show you\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:07:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the name and eventually the inputs and the outputs if there are any so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:07:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 let me see how my compute is going it's loading grasshopper okay but because it doesn't take it you\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:07:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 know right now this doesn't take make use of compute we can actually just press f5\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:07:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 to start debugging i guess i should look at\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:08:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 terminal\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:08:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it's like almost as i was typing it out here it's that slow\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:08:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um so there's a few other npm scripts\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:08:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 defined in the package json and that's in case you want to run this from a different environment or\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:08:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 in any different way so you should see her listening on port 3000 and if i go to browser\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:08:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i say local host 2000\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:09:03\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you should see here the uh so it just returns to json of the definitions\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:09:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 array that we have because we've never requested that compute analyze any of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:09:17\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 these definitions all we're seeing here are just the names maybe do we have some chat going\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:09:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 on let's see here i can see the chat\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:09:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i think i think i can um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:09:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 okay uh so right now we've not hit actually we've not hit compute it's just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:09:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 listing these um and let me just double check that compute is running\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:09:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 all right so now computer's running so let's try to just hit compute first from here uh i'm just going to you know copy for\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:10:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 example the the name of one of these so this surface k means gh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:10:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and i'm just going to do a slash and paste that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:10:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 okay so you see that i've hit this i o endpoint\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:10:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and that gives me the names of the inputs\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:10:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and the outputs so this particular definition has a bunch of numbers here some\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:10:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i've kind of gotten used to naming the inputs and outputs in a certain way so if it's an integer or a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:10:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 number etc and it might be a good time now to actually look at what this looks like\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:10:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so if i open up rhino and grasshopper\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:10:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i'm just going to open up this definition so you can see what this uh looks like because we haven't\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:10:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 really discussed we've discussed that we're remote solving grasshopper definitions but we haven't actually discussed\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:11:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um yeah what how we create these these definitions so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:11:13\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 open this up everything is going super slow here okay i don't think the definition you have is exactly like this i think this is an\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:11:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 older version of it um but actually this is definition provided\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:11:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 by david leon i don't know if he's actually in the in the call itself but\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:11:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 let me yeah so so when you see the rhino in uh these are how we define the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:11:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the inputs this is kind of uh coming from the the rest hopper work that was done by tt core studio\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:11:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh this is the let's say the standard that they that they chose essentially any anything that's going to be an input\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:11:51\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh you sort of group that parameter um you give it a nickname rh underscore\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:11:57\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 in colon and then you whatever name you want um so uh when we hit that i o end point\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:12:03\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 compute is is taking a look kind of sniffing at this definition seeing what the inputs actually are\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:12:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and their types and it also shows us what are the the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:12:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 outputs so this particular definition has i believe three outputs it has the mesh itself um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:12:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 clusters and string color so this definition actually takes a surface and it has some let's say some quad\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:12:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 meshes on it called mesh faces and it lets runs a k-means clustering algorithm on that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:12:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and it gives you back the number of let's say panels per cluster and the colors et cetera\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:12:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so this is essentially what you need to do to format a grasshopper definition to work on compute\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:12:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you see that it's it's not much different than what you would already use normally it opens here in rhino just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:12:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 fine it doesn't do anything strange if i have if i look at my my viewport you see that i have here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:12:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 a kind of a preview of what we've seen okay so let's actually see that working\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:13:09\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 in the in the server itself so if i look at\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:13:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 visual studio code and i look at the files we actually\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:13:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 serve up some examples and there's this example directory\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:13:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 over the last few days will and i have been adding a couple of different\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:13:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 new examples but we also have the let's say that spiky thing here so if we just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:13:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 go in our in the browser and just type an example\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:13:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it should come up here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:14:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i don't know if that's what's happening to you as well that's i think i took that off but let's see yeah i took it off\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:14:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so if you hit the break point then it's working for you you should have been somewhere in here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:14:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i don't happen to be hitting that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:14:40\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 let me see if i get any information here so actually it does tell me that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:14:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 compute has requested the definition\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:15:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i hope that you guys are seeing something on your screen are you seeing something some spiky thing no no some people\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:15:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yes yes i can just like\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:15:13\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and the screen sharing that's super heavy on your machine let's say it just drains your resources so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:15:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 give some time i guess this is a little bit longer than we're comfortable with i guess\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:15:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um let me jiggle the handle see if that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:15:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 does anything but you see this is kind of like spiky thing version version two\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:15:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i guess while this is uh trying to do its thing it should be much faster than this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:15:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 actually but uh what i'll do is i can also i'm going to open up this definition\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:15:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 see what that looks like\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:16:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 is this the spiky thing definition here i think i had called it branch node\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:16:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 random yeah\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:16:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 this the thing has been given different nicknames and i'm sure that you all have much more\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:16:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 practical definitions than these blobs of geometry but\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:16:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you know so here we have three inputs the radius the count and the length\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:16:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 radius is the radius of the overall piece of geometry the count is how many uh let's say\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:16:37\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 points are populated around it and then the length is kind of the length of the extrusion\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:16:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 of these things and then when we output this we're actually i mean i also wanted to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:16:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 take advantage of some of the stuff in rhino 7 so making a sub d from a mesh and smoothing that out\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:16:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and eventually getting a mesh back here steve modified the definition to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:17:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 run a bit faster and we'll see some of the things that uh that he added around around this but\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:17:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 essentially he's using draco compression to compress that mesh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:17:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and send it out as a string and then we receive it and we\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:17:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we receive it and we eventually d to compress it and show it but\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:17:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i'm getting absolutely nothing from that let me see if i can do anything\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:17:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 let me try to run another example and see if it's just something with me here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:18:03\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 where are you compute okay you seem to be doing fine\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:18:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 let me see if i can do anything here maybe uh am i starting this thing before it's gonna restart and see if i\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:18:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 get any any different behavior there um if you want to try the different\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:18:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 examples here um just by going example you get the spiky thing uh you get the there's a an\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:18:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 excellent dresser that will cooked up and uh this panel's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:18:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 definition from david leon\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:18:51\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so while this is happening um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:18:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 let me see let me just double check if it doesn't work then i'll discuss i'll discuss something else but hope it\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:19:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 seems like it's working on for everybody out\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:19:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 double there this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:19:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i've got it running here luis um i'm happy to play uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:19:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 play puppet if you want to guide me around um well i guess i think people are\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:19:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 seeing it i guess what i wanted to to discuss and explore now is a little bit on the other side of things\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:19:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so so when we when we run these definitions we're actually hitting this solve endpoint and there's a couple of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:19:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 things that happen uh sort of a pipeline um of passing the data through so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:19:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 when we get the request of the solve endpoint um all the way at the bottom here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:20:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 is how we handle the different uh routes so either depending on the method if it's head and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:20:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you just want to get the header the headers or the get request or repo a post request\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:20:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 here we're actually passing all this the request through a pipeline so the first thing that happens is we\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:20:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 check the the compute parameters we check that we have the appropriate\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:20:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 key or url to compute we collect the input parameters to the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:20:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 definition uh so we should be passing that information with our request\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:20:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we check uh the cache so we check if a similar or a solution has already been cached\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:20:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 for those input parameters and eventually we solve the definition\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:20:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 or return the cached result in in case that that there's already something there\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:21:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so these four uh different what express calls middleware functions\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:21:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 are defined here and eventually it'd be good to probably you know clean this up and maybe put them in their own file but\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:21:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so it's all here kind of an order so first here we have the compute parameters\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:21:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we collect the inputs so depending on the method we'll um either get the body or\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:21:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the request parameters and the query options\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:21:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 then we eventually go over to checking the cache so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:21:37\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 if memcached if that that information is available then it uses memcache otherwise it uses node\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:21:44\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 cache and it checks uh the cache to see if the result there and then we have this common solve\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:21:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 which until now we haven't done anything with random compute this is all just on app server uh checking data and eventually here we\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:21:57\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 have the rhino compute call this is on line 136 so it's compute.grasshopper.evaluate\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:22:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the definition so we have the definition path we have the information that we're passing\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:22:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 as input parameters to that definition um and then we wait for the response to come back um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:22:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so here steve has added a lot of information a lot of extra stuff in the headers both in\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:22:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 compute and eventually reported here to just understand how much time this is all taking\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:22:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 if you open up the dev tools and maybe i'll eventually pass it back to to you here in a moment we'll so people\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:22:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 can see that but there's all sorts of stuff reported about whether you've hit a cached\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:22:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 solution or not how long this is all taking et cetera so maybe if you want to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:22:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 switch over uh will so that people can see the screen and maybe you can show what's happening there with\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:22:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the catching while i check what's happening on my side of things yeah sure so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:23:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um so i've got the the basic uh i should say the awesome\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:23:09\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 spiky thing um version two yeah spiky thing version two\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:23:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um i actually preferred version one i just want that on record yeah um what the version two isn't isn't\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:23:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 isn't awesome um uh yeah so um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:23:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so i can change the input and and i've got the um both the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:23:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 consoles running over on on the left here um so i've got the uh app server um just here let's make a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:23:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 little bit bigger and and then i've got compute running here that's running in in visual studio um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:23:51\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so you can see a bunch of uh output so let me just um uh refresh this so we clear the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:23:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 console um so we're getting a bunch of input output here and in particular there's a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:24:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 bunch of outputs um about the time it's taking to do\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:24:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 various parts of the um of the communication and as i say we've\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:24:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 been we've been investigating how to speed this stuff up um so if i\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:24:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 pick something new that i haven't picked before so you can see here um uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:24:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 total request um uh 240 milliseconds and then we can break\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:24:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that down so on the app server um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:24:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh in particular uh the communication between the app server and compute\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:24:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um it's pretty darn quick because it's on the same computer um and then also between the browser and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:24:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the app server and then after that we've got timing for\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:25:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the um actually decoding the once you get the json back in the browser decoding that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:25:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 into a rhino mesh and then converting the rhino mesh to a 3.js mesh and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:25:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 inserting into the scene so we just we're just being experimenting to see you know where like\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:25:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 what's the what the most important things to try and um to try and speed up you know what's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:25:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 really what's really taking the time\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:25:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so if i just click this again so that if it to kind of simulate me running the same\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:25:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 combination of inputs for a second time so we get a lot less output because\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:25:44\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the app server said okay i know about that combination so i don't even have to talk to compute\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:25:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i can just give you the result straight away um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:25:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and then i go to another one that's brand new just click it that's hitting the same\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:26:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 thing again yeah and i know um uh luis you jump in\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:26:09\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 if you want to i was just going to mention that you looked into um obviously this doing it this way relies\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:26:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 on someone to you know move all those sliders um but we can actually um lewis has looked\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:26:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 into kind of uh automating the process of of of warming the cache so so filling up the cache with all those\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:26:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 various um inputs yeah i mean it takes it takes a bit of time and you can kind of cancel\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:26:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 but if you actually navigate to um i think it's init example slash init.html\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:26:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so if you click that oh oops all right hopefully yeah that hap just ignore that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:26:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 actually this is uh this is because those this is because those definitions are um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:26:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 or those solutions create kind of garbage my ranges aren't appropriate sorry i\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:27:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 forgot to do that so yeah now it's just gonna hit a bunch of kind of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:27:09\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 bad ones in the beginning and then eventually it'll start to well this takes less than 10 minutes or so for this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:27:17\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 particular one and we of course tuned a little bit so that uh so that um yeah we're not running like\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:27:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 10 000 uh so this is what you know this is the resolution that you could do within like\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:27:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i don't know 10 minutes that would at least show you but yeah this could take you know hours days depending on uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:27:37\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 how much resolution you'd want to uh take on so this is essentially going through\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:27:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 here it's got you know this definition has three sliders so it just has three four loops nested\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:27:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um and eventually creates all the solutions for that maybe this is something we'd like to abstract and add it as a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:27:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 possibility for for some definitions um so just have a generic um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:28:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 let's say initial initialization where you could kind of set up what ranges you want to initialize so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:28:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 this is something we thinking about\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:28:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and this is like historically um people who who wanted to set up um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:28:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you know web based interfaces to a something like a grasshopper model they often resorted to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:28:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 sort of pre-generating the outputs and and yeah it's it's pretty hard to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:28:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 get around the fact that sending data and processing um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:28:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 geometry on a remote server is always slower than if you've just got the data in the browser or you know as close to the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:28:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 browser as possible to begin with um it's finished so i guess now if i go\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:28:57\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and i go back to the example everything should just be\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:29:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 super snappy which is pretty great oh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:29:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah there's something you got a got a hole\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:29:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i think you're doing do we need to export these are they also cached um what do you mean export\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:29:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 what do you mean by export yeah they're i guess it's in memory so this one year when\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:29:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we're running locally it's using node cache so it's just using the memory of your system uh i've also actually installed\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:29:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 memcached locally for windows which was kind of a there's not that much support for it but it's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:29:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 possible just to test things out um so yeah that's it's also possible\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:29:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i am having a weird thing i cannot hit hit this at all over here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:29:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 oh do i have an old oh i'm playing the wrong thing\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:30:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 does the cache take up a lot of space we're going to talk about that a little bit in the next uh in the next step so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:30:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um there's a dashboard for the caching mechanism for mencast that we're going to see on heroku\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:30:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and surprisingly the the initialization script that that we run\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:30:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 there i think took up 88 megabytes and that is you know\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:30:33\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 trying to reduce things as much as possible you think you have to think that each of those solutions is storing a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:30:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 mesh even though that mesh is uh is let's say draco compressed\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:30:44\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um as the solution as a string so it's already let's say optimized to a certain extent\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:30:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um it's storing the mesh it's storing the input parameters and a few other things but yeah it's so it's storing a thousand\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:30:57\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 one hundred ten i think that's the amount that i don't recall right now 1 100 meshes\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:31:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and that was about 88 megabytes for for that um but yeah exactly what you say if it's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:31:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 a kilobyte then 10 000 solutions is 10 megabytes yeah\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:31:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 but when you start to have geometry in there it definitely takes quite a while and is you know probably a good good\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:31:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 idea to think and that's in that case for a different kind of uh storage maybe mongodb or something like\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:31:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that of course you're going to run into\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:31:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 further latency issues i mean the idea behind these caching mechanisms is that they're as fast as possible and as close as to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:31:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 as close to your system as possible offloading that to anything else is going to be a little bit\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:31:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 take a little bit longer all right um well i think now we've reached the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:31:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 point for a break so if you have questions uh think about them while we\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:32:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 take a break here and come back and answer some of them in the meantime i'll try to see if i can get my uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:32:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 get my stuff to work over here is it possible to optimize the solutions you cache i need only the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:32:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 most used inputs um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:32:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah i mean if you what we're doing kind of a trick here because the input sliders only\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:32:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 only allow you to hit certain so there's a there's a minimum maximum and like a step so here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:32:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we're in many cases just hitting like uh integer values we don't have uh let's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:32:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 say decimal values um but you can also if you know that people are going to hit\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:32:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you know a certain range of cash there could be that could do you could maybe even do an adaptive caching where\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:32:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 if you hit uh if you're saying people are hitting a lot of the same areas maybe try to to cash\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:32:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 let's say that neighborhood of solutions that could also be something interesting yeah i'll add um well something we don't\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:33:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 do here is ever remove anything from the cache i don't i don't believe we do so you could uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:33:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you could expire stuff and then by um by the nature of the thing something\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:33:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that doesn't get used um you know over a certain period of time it'll drop out the cache and the stuff that gets used regularly it'll\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:33:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 stay stay in the cache um yeah you can uh right now yeah that's right now we can\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:33:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 give it a lifetime yeah and then also something that we\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:33:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we have looked into a bit but um i don't think we have time to go into here is the the like browsers do a lot of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:33:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 caching as well as as i mentioned at the start we we looked into implementing a um a get\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:33:51\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the get method instead of post for solving these crossover definitions so we can actually leverage the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:33:57\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the browser's um caching and so um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:34:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 just to touch on that uh lightly when what happens when when um the browser um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:34:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh with browser caching is that it will actually go and um ask the server for the thing the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:34:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 server will send headers back that describe whether or not the thing is changed or not um and if it has then the browser will\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:34:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 request the in the entire payload um and we we currently\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:34:33\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 generate the whole thing regardless um which is what a lot of websites do\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:34:40\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 but we could be smarter and we could avoid actually solving it or getting it from\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:34:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the cache when responding to that initial head request um so yeah there's there's opportunity to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:34:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 make it even faster\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:35:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 all right all right so let's uh take about a short break here and we'll come back\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:35:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and continue on with this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:35:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 mentioned earlier will if you don't mind if i could ask you about running rhino on a windows image\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:35:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um the reason for that so we are making quite a large um plugin at\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:35:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 my company and i'm writing a lot of it and one of the main things is just testing stuff\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:35:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um and i can run tests locally very happily that's very nice and easy problem is when i\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:35:37\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 want to plug it into something like azure pipelines or something and you would like to build them automatically um and i can't\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:35:44\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 obviously pipelines doesn't come with rhino installed which is a bit of a shortcoming but i assume i can use some kind of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:35:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 windows image like docker or something else and then boot coming up in there yeah i\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:35:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 mean what i'm going to show next um is\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:36:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the process for setting up um setting up compute on a windows server\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:36:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 virtual machine um happens to be aws um but but yeah and and that process\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:36:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um you know there's some slight differences but but it shows you how to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:36:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 automate the installation of um automate the installation of rhino um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:36:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 how to configure it with a license um and so that can be\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:36:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 transferred to uh you know what whatever kind of virtual machine um you're using\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:36:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and so we've got a dockerfile in that in the compute repository as well that shows you how\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:36:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you can build a docker image um so yeah there's a bunch of options\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:36:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i am that rhino compute surrounding compute then if that's what's in the docker image it's not the full rhino it's just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:37:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 everything in the rhino.geometry namespace so if you leave that space then that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:37:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 would be different so that that limitation is is purely and just what's been\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:37:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 exposed uh through the through the api um so you know it's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:37:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 any any machine that that um you want to run compute on has to have\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:37:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 rhino installed and and that is everything you know even even the stuff that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:37:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um you're not using um and yeah and a question of exposing more\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:37:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 stuff it's just it's just yeah if you can find something else that be useful to to expose um then\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:37:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 either try it or talk to us um but we just think the geometry engine is\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:37:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 is the the most interesting um and the most useful i mean yeah\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:37:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh right calling locally you can do anything essentially it's just like having rhino i assume\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:38:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 some things that won't work but pretty much all of it's going to work yeah the we've run into issues\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:38:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um things like as i said it's it's stateless um and so we've run into issues in the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:38:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 past i see steve meeting and and i'm using for herself the only thing i was going to point out was for the docker image you\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:38:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 know of course column your your um your custom plugin isn't going to be part of it so it's just plain vanilla\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:38:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 rhino that's what you get yeah and that goes that goes for any you know any any image\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:38:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um where you're installing everything from scratch um docker has the caveat that it's um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:38:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 usually takes a little bit more there there's usually a well a few more caveats to getting things\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:38:44\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh to work and so it you know there were certainly a few hurdles to getting rhino to to work smoothly there um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:38:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh but yeah it's i was gonna say before about um oh we've\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:38:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 got another we've got another attendee um i was going to say before about um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:39:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh stuff like the why we're focused on the rhino geometry namespace\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:39:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 a lot of that is is it works well with this idea of it being stateless you know you you pass two meshes in and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:39:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you ask for the the result of boolean bullying them together for instance um some other stuff that we really like\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:39:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 to explore is is leveraging the um import export um you know rhino is\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:39:37\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 very powerful it can it can read and write a lot of different formats um but but some of that will take a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:39:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 little bit more more work to um to leverage um yeah\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:39:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 but yeah on if if you come up with something that you'd\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:39:57\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 really like to be able to um to use through compute then please\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:40:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you know talk to us um we'd love to look into it um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:40:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i do have a question then so you can essentially create this docker image and if i've i've got a libraries of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:40:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 course that are all part of the plugin and all those libraries can i can just poke you know rhino compute and whatnot on this little docker image\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:40:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 with that in like a headless state so for example one of the main things that i need to do\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:40:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 is all the data storage is done in user dictionaries and archival dictionaries is that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:40:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 something you can talk to and compute you know um because they're part of genre so if\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:40:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you have like a swing from geometry base it will have that property but i don't know if\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:40:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that is all set up and ready to poke i mean that sounds\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:40:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 more like something that's actually stored in the file\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:40:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um um i don't quite know i think so it lives inside the geometry\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:40:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 in theory yeah because there's a there's like there's a distinction here if\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:41:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you're like if if you want to open a a 3dm file and get all the geometry\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:41:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 inside there and get all the data that's attached to the geometry and attach the file itself\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:41:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 in there then then you can do that with with rhino 3dm um and you can do that in um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:41:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you don't actually need rhino to do that um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:41:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah so i'll try that yeah i mean i mean\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:41:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 get in touch with us after the uh um i mean this goes for everyone um if you've got like really specific\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:41:44\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 questions that needs um sort of you know digging into then please get in touch with us after\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:41:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the um after aac tech and and we can continue continue the conversations\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:41:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah well i don't know i got my everything's working now over here um i\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:42:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i turned off obs and things started working so i don't know there's some obs compatibilities\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:42:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 but anyways we're we've got a little bit just uh 59 minutes here to go and we've got a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:42:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 lot of ground cover um now we're going to be discussing remote deployment\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:42:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 which is okay this is great it's all worked nicely on our on our machines here but actually\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:42:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 if i want to put this live somewhere where other people can can hit it how can we go about it there's two main\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:42:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 chunks to this essentially is well we got to get rhino compute up somewhere\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:42:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 on a server accessible and we have to get app server up somewhere deployed so we're going to run through\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:42:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 both of those will is going to take you through the remote deployment of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:42:51\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 compute and i will take you through the remote deployment of app server so you wanna\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:42:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 take that away will yeah\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:43:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 okay right let me close this down\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:43:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i had a request um actually i'll i had a request to show\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:43:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 cloning again but i'm not sure if the person who requested that is actually\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:43:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i think i might get them in a room with steve if i'm not mistaken okay brilliant all right i'll just jump\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:43:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 straight on then um okay so so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:43:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i thought that since this is kind of like pulling a few different things um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:43:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 dealing with um uh you know having a license set up on cloud zoo having an account with aws and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:43:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 all that stuff i thought i'm just i'm just going to do this more as a um i don't really expect people to sort\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:44:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 of follow along um i'm going to try and just kind of go through it of course this will be recorded so you can\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:44:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 come back and and watch this again um yeah so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:44:17\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we recently re [Music]\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:44:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so we recently just tried to kind of consolidate some\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:44:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 of our documentation all of this stuff has been a bit of a moving target um since it since it started uh licensing\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:44:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 has been a key part of that it's traditionally been a little bit of a um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:44:44\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 a little bit difficult because it's you know the licensing is built around um this being a desktop application\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:44:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um but we've got i think we've got quite a streamlined process in here now i'm going to do this in a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:44:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 slightly different order just to make the best use of time um so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:45:03\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i'm gonna uh skip over the um licensing\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:45:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and and i'm gonna go straight to preparing the windows um virtual machine just so while that's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:45:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 kind of warming up i can then jump back to the licensing rather than just playing the elevator\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:45:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 music for for five minutes while it while aws does its thing okay so uh and again this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:45:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 this document i've gone to this is this is just in our in compute.rhino3d github\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:45:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 repository so i'm going to open up um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:45:44\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh aws and and i'm in ec2 so virtual machines\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:45:51\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um and and i'm going to launch an instance\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:46:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i made a few notes let's just put this over here i\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:46:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 made a few notes that you know of course this um you could be using any any system um any\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:46:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 any cloud provider to do this um but there's a few things to to pay attention to and the first one\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:46:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 being that it needs to be a windows server virtual machine so we're just going to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:46:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 use windows server 2019 base that's absolutely fine i'm going to pick\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:46:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 t2 medium just from experience uh using\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:46:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 anything else interactively um like t2 small and tt micro just can be a little bit of a a little bit\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:46:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 laggy um t2 medium seems like it works absolutely great even though it seems like you know two virtual cpus so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:46:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it's like one that's like having one core in your machine but but really\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:47:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um you know it's it's it's enough especially for what for what we're doing\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:47:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um so i'm going to not touch anything here because i\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:47:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 actually have an elastic ip that i'm going to attach to this machine because we've um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:47:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so so that the links in the um uh in the slides work\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:47:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 but some things to pay attention to would um if you weren't using something like an elastic\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:47:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 ip you would be to make sure that um this machine will get a public ip\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:47:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 storage 30 gigs absolutely fine um something i always like to do\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:47:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 is when i'm using aws is always give the thing a name so that when i come\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:47:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 back to tomorrow and i can't remember anything i can figure out what i was doing\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:48:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 [Music] and then uh this is another important part\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:48:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so we need to communicate with this uh virtual machine and a in aws\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:48:13\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 as with other providers that the concept of security groups kind of like a firewall essentially\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:48:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i have this security group already set up so it allows\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:48:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 basically anything anywhere else on the web to communicate with this virtual machine either\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:48:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 port 80 so http or rdp which happens to be port 3389 so that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:48:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 means i can i can remote desktop into the machine and and we can\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:48:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 essentially use compute from outside of the machine all right so that's all set up and i'm\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:48:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 going to hit launch and another aws bit in order to be able to log into the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:49:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 machine i need to have a key pair i'll use that to get the password to the machine\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:49:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i already have that downloaded so i'm just going to go ahead and click this all right\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:49:13\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so that's spinning up let's go and have a look at it in the uh um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:49:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 in the wonderful brand new um ec2 experience i think that's still figuring\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:49:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 out some of some of the quirks so while that's while that's uh spinning up\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:49:33\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um let's jump back and and look at step number one so they said we've done um done a bit of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:49:40\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 work uh aj our uh cloud zoo and rhino accounts wizard has um done some awesome work\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:49:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 just just making this so much more server friendly so so you know even a couple of months ago\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:49:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you had to kind of make sure the right files were like in the right places on the system\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:49:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 now it's uh all taken care of by a single environment variable which\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:50:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um for those of you who familiar with with deploying servers configuring things by\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:50:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 environment variables is you know one of the de facto um ways of doing things it just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:50:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 integrates a lot of different systems really nicely so i'm going to start by going to the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:50:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 licenses portal actually that's just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:50:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 how many windows can i open in one go next question\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:50:37\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so this is rhino3d.com forward slash licenses um for any of you use the cloud zoo this will be familiar\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:50:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so see i'm part of a bunch of teams i've set up one in particular for this um uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:50:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 for this uh workshop and there's some some more instructions here that go into\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:50:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 detail on how to how to set up these these these teams um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:51:03\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i thought i'd save you some of the tedious parts like me putting in my\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:51:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 credit card details um and and i've gone ahead and set it\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:51:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 all up already so this is a team and you can see at the top it says core hour billing\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:51:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 is enabled so there's two kinds of teams in um in the cloud zoo um normal teams\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:51:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 where you invite a bunch of people and then you put a bunch of licenses in the team and core our billing teams\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:51:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 where you don't actually put licenses in in the team you enable core out billing by putting in\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:51:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 your um by putting in your credit card\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:51:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 information you can go and look at car billing here and then you select which products\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:51:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um will be able to uh to use this use this team and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:51:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 writer 6 is a little bit confusing here but essentially that's to do with the fact that rhino\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:52:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 7 whip used the rhino6 license\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:52:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 now pretty much it's always pulling the rhino seven license and that will be the case once rhino seven is released\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:52:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um yeah so um here we've got information to do of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:52:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 payment um and this is the one that that we want so i\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:52:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 hit get author token and it goes off to rhino accounts um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:52:44\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you know authenticates me and comes back and now i have an auth token and this is what i'm going\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:52:51\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 to use to configure the virtual machine\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:52:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so let's go back and see if that virtual machine is up and running\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:53:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so i can come here and hit connect i haven't actually tried this um session\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:53:09\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 stuff yet but for now we're going to do it the the old way and actually just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:53:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 of course i've talked about elastic ips before so i better actually go and do that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:53:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um so i'll find my elastic ip and for anyone not familiar with with\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:53:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 this um you can basically request uh it's kind of like having a static ip but\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:53:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i can attach this static ip to any\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:53:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 virtual machine that i want so i'm going to associate it with the virtual machine that i just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:53:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 span up and that's done and so look in here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:53:57\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that's my instance i can jump back and can i do that okay\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:54:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 right that's going to be your setup let's go and connect to it so i'm going to download the desktop file we'll do the easy way\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:54:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i'm going to get the password i'll use the private key file\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:54:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 to get that password i'll delete this later [Music]\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:54:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and all right let's put that on the clipboard\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:54:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and start this up\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:54:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and yeah it always does this because it's a self-signed certificate\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:55:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i assume it's um well everyone can see that it's all coming through fine over\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:55:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh screen sharing wicked okay so yes\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:55:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 all right it only goes down here from uh downhill here from with windows um this is the nicest it\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:55:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 will be um okay so i'm just gonna jump back into the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:55:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 instructions so we tried to make this like super easy we've essentially distilled all of the setup into a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:55:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 power shell script so i'm going to go ahead and copy this line\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:55:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um and go back to the remote desktop i'm going to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:55:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 start a powershell just a regular powershell window\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:56:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and we're running as the administrator here so i have all the access that we need\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:56:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um and i'm going to right click in here because\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:56:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 apparently that's how you paste things into powershell\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:56:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um hit enter so it's just downloaded the the script and this link\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:56:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 goes to the very latest version of the of the script and the first thing it's going to ask me for is my email address\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:56:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um and this is purely because um as uh as you know if you downloaded\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:56:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 rhino from the website uh you need to put in your email address and it's exactly the same thing here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:56:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um and then it's gonna ask me for an api key and um that api key\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:56:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 is actually uh if i go back over here so scrubs here the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:57:03\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 api key is for uh authentication authenticating a client\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:57:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that's going to authorizing a client that's going to call compute so it's just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:57:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 a token that that you're going to configure in your\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:57:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 client so that not just anyone can can call um compute and and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:57:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 use up uh processor cycles of rhino so let's just go with something\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:57:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 like this nice and secure and then the rhino token\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:57:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so i'm going to go back again and find that token and handy\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:57:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 copy button and then we'll jump back in and again i'm just going to right click\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:57:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 to paste all of that and hit enter and now it's going to do\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:58:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 its thing so one of the first things it's it's done is is set the environment variables\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:58:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so it's set that that token it set the um the api key\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:58:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and it's also set this um uh rhino compute urls so that base just tells compute\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:58:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that it's gonna be running on http and and listening on uh all interfaces\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:58:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 which allows connections in from from outside of the um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:58:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 of this particular virtual machine and on port 80. and so right now it's installing iis um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:58:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that just uh takes care of a a bunch of things including opening up\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:58:44\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um or 80 on windows windows own firewall\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:58:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah now we need that elevator music but do we need to do this let's say this server is running for a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:59:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 longer time right um when the rhino web expires do we need to run the script again\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:59:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 no no we actually have um there are actually two other scripts um in the uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:59:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh i can this will take a while actually i can i can i'll come back to this in a sec but just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:59:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 right now i'll show you um so this script lives\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:59:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 in this directory and there's also two others one for updating compute\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:59:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and one for updating rhino um so you can just download those onto the uh onto the virtual machine and and run\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:59:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 those and those will take care of those tasks great but yeah we do need to update rhino every time it\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:59:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 rolls over let's say yes it expires yeah yeah yeah\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:59:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah yeah we you know we understand that it's a it's a bit of a pain um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 1:59:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 but of course that that is that is the the way we do things when when rhino is\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:00:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 in um in work in progress you know we're in beta now um soon\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:00:09\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 hopefully we'll um it will be released and then you won't have to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:00:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 update it but still you know as you see with rhino6 there's still lots of um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:00:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh you know we then get into the service releases with uh fixing bugs and stuff and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:00:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and yeah you probably will still want to want to keep up to date\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:00:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah so this is something fairly recently we updated some of our\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:00:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 core.net libraries inside of rhino to use um dotnet framework 4.8\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:00:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and microsoft windows server 2019 doesn't ship\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:00:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 with dotnet 4.8 so the installer is is taking care of that that for us um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:01:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah this one does take this one does take a little while has anyone got any other\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:01:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 questions uh i have one okay maybe it's more so a question uh or\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:01:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 my naivety about how rhino takes advantage of resources so um how is there opportunities to scale\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:01:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 out this um this solution for um for larger computations like unless\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:01:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 like you know and let's check your you're splitting out or doing promises with\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:01:37\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 your grasshopper script or some other components like how would you guys best say take this to scale when you're dealing with lots of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:01:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 users is it like more workers or is it more instances um i mean it depends on the environment\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:01:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 in which you're you're you're running um your\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:01:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so i've done experiments with with um kubernetes for instance um that gives\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:02:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you a lot of flexibility um if you're running compute as a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:02:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 if you're using the uh if you build a docker image that that has compute and rhino then\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:02:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you can um you know you can have a number of um pods containers running on\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:02:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 each node or you can add more nodes um you know it's a really flexible way of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:02:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 of doing it we've also tried just um it's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:02:33\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it it's generally not recommended to unless you're in some kind of containerized environment to run more\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:02:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 than one instance of uh compute on the same machine\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:02:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it's a bit just better to kind of sandbox it but we have tried\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:02:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 using virtual machines and then scaling the number of virtual machines\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:02:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 there's also you know in addition to scaling out you can also scale up so you can throw some really big\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:03:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 virtual machines at this um and just to kind of preempt if there\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:03:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 are any questions about solving um you know big problems that require a lot of um computation\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:03:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it's at the end of the day it's rhino so if that is something that solves the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:03:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 problem for you when running regular rhino then it could be a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:03:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 solution when running rhino via compute um but you know throwing throwing more\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:03:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 computers at a problem doesn't always fix the problem gotcha thank you yeah i\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:03:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 think uh in my mind's like you would have to kind of figure out what your traffic would be because spinning up new\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:03:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 instances on the fly especially windows instances is pretty slow um so that makes sense yeah yeah\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:03:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 for sure and that's something we tried very early on i tried the auto scaling um uh auto screen auto scaling groups in\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:04:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 in aws and and yeah there's no way to to react without sort of uh you know pre-warming and then if you're\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:04:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 gonna like uh pre-warm your instances um well you're already paying for them so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:04:17\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you might as well just put them into service straightaway um docker definitely\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:04:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you can be a bit quicker but still you're paying for the underlying\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:04:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 instances so you're paying for the nodes that you're you're distributing all of these\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:04:37\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 containers across um so it's still this is just this is just an issue with\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:04:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 with containerization on windows that um it's not as far yet as um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:04:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 as it is on on linux and also there's the the you know the licensing fee for\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:04:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 windows to pay so um yeah it still has still has a ways to go until you don't\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:05:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 have to think at all about the infrastructure that that your software is running\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:05:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 on top of all right looks like it's almost\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:05:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 almost done yeah it's the um it's the net uh that that takes a lot of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:05:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 time um yeah once this once it finishes up um it will\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:05:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh it will install the service that's the way that we've we've configured compute\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:05:37\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so as you've seen before you can run it just like an executable but we're using this library called top\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:05:44\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 shelf that actually allows you to install it as a service which makes it super easy for just like starting up when the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:05:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 when the computer starts up um and so see down here it gives a bit of a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:05:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 suggestion as to what it's doing right now um so i'm gonna enter the um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:06:03\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the username of the um the user that i want to run computers and the like the simplest way there's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:06:09\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 tons of options but the simplest way is just to to do it as the user that you're currently logged in as that way if\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:06:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 there's any problems you can just basically just start at rhino and and and figure it out\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:06:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um and also the um the environment variable has been set up\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:06:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um for that user let's see if i can spell this right\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:06:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 oh i need to go back and find that uh password again\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:06:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 let's get that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:06:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah there's been some confusion over because obviously that you got like rhino accounts and then that has tokens and then\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:06:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 there's api keys and then the service has login details\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:07:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so try to make it as clear as possible as as we're going through um okay so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:07:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 install the service now it's going to reboot just to kind of complete the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:07:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 installation we installed a bunch of stuff and configured a bunch of stuff um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:07:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 as part of that script and some of that just need that that reboot to um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:07:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 to get to to get everything everything working properly um so i'm just gonna jump back in\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:07:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:07:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i'm gonna i'm gonna just try\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:07:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 connecting to it again\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:07:51\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 usually it doesn't take too long to to reboot certainly not as long as it\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:07:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 does to actually provision the um the virtual machine in the first place\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:08:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 let's try again\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:08:13\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you can tell i don't have a lot of patience\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:08:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 does anyone have a a burning question while this is um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:08:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 well while the the virtual machine is\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:08:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 restarting\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:08:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 ah there we go\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:08:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 okay we're back in so uh this is a little caveat prior to the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:09:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 update to net um it would actually all be running\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:09:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 right now um but that update actually it itself requires a restart\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:09:13\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and so it's just the case that when um this machine rebooted and compute tried to start automatically\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:09:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it it hadn't it wasn't quite ready um so i'm just going to go in and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:09:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 start the service myself so i'm just going to go into services\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:09:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and every every other time that you reboot the machine it will just start automatically so in\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:09:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 here now there is a compute.geometry it's also good to know that this is here if you ever need to if\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:09:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you ever need to restart it or or stop it or for whatever reason\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:09:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i'm just going to hit start and i'm just gonna let that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:10:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 do its thing and over here i've got this link already teed up\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:10:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 okay still waiting so compute is basically in the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:10:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 background you know we've been we've been watching the console um plenty already and it's basically\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:10:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 doing that same thing so it's it's starting up rhino it's um it's initializing the license\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:10:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um and and then it's listening on the port now that it's actually running let's try and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:10:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 do this again hey so it's actually working um yeah and then\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:10:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i just jump to the next oh here we go so we can go back and find those\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:10:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um samples and i'll just do i'll just do one of them quickly because i do want to um jump onto the stuff that luis has to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:11:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 to to talk about next\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:11:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so these are the same samples that we had before same samples we use they're set up\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:11:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 to work with compute that's running on your local machine um so we just copy this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:11:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and basically replace this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:11:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and fix our indentation because this has to be proper um so okay this is the class\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:11:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 detection one so gonna go live class detection and now it's gonna\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:11:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it's gone out to the the server that we just set up running you know in the cloud\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:11:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and and it's working yeah so lewis do you want to um do you want\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:12:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 to take over with your with the next part with um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:12:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 with the app server next oh you're muted hang on\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:12:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 sounds good okay\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:12:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 all right so now we are going to um deploy\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:12:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the app server on heroku okay uh we have a guide but you all\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:12:44\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 should have already a heroku account so what i'm going to do is just follow\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:12:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 this over here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:12:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 all right so what i'm going to do is first i'm going to go to i'll just do this from visual studio\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:13:03\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 code i'm going to stop the i still have this running so what i'm\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:13:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 going to do here in the terminal and you can go to terminal new terminal if you don't see\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:13:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 one there um and this is just a power shell within visual studio code\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:13:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i'm gonna log in uh so you should have have also already installed the heroku\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:13:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 cli the command line interface otherwise this uh this part won't work so i'm gonna say\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:13:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 heroku login um so we're gonna go through a few\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:13:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 commands here we're gonna log in we're going to create an app we're going to set a few environment variables and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:13:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 these variables are what will just changed in the in the samples the url and the api key and then\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:13:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we will push the code we have here to the um heroku application and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:14:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 open it up and then we'll kind of navigate heroku and see um see what's going on over there so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:14:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 heroku login and usually it asks to open a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:14:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 browser window so i'm going to press some key i've already logged in but um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:14:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 here we go i'm gonna say login i'm logged in\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:14:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 close that okay then heroku create so here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:14:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 think of a clever name for your app so i'm going to say roku create\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:14:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 app server um workshop not super creative but that's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:14:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 what i got right now so i'm going to go ahead and do that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:15:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so this is just going to create like an empty application there on heroku and it's going to also set up a sort of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:15:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 a git repo over there that's where we're going to eventually push to um so next thing is we should set some\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:15:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 environment variables and this is what the heroku config let me make this a little bit bigger so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:15:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you can maybe see it so heroku config and here we're going to use the same\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:15:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh ip and the compute key that we'll just set up\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:15:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so i'm gonna go ahead and just copy this and paste it oops\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:15:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 just an h there\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:15:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 these you can also set within the the interface of heroku um but just so you can see\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:16:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 how you can do it via the command line see the chat is blowing up\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:16:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so we've set the url we've set the key now let's push the code over there\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:16:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so git push\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:16:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 does heroku work with the main branch say again\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:16:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah it does seem to it's just just interesting because heroku used to um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:16:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh back when the discussions of master vs main started the uh um heroku only worked with the master\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:17:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 branch so you think it was only it's only as of like a few weeks ago or something yeah awesome after\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:17:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 after our discussion of that yeah yeah um and then heroku open\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:17:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i don't need to copy that come on so this should open up our application\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:17:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 let's see what we got so you see that it gives us the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:17:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh a link so app server workshop and then dot heroku app.com and we've hit our route we have the list\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:17:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 of our definitions that's great let's uh see what else can we get um the inputs can we hit the i o endpoint\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:17:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 by putting here uh one of the definitions i'll check the chat here in a moment i see it\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:17:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 there's a lot of activity over there um so yeah so you see that um we we put in branch node r and d\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:18:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and we get the inputs and outputs so we're hitting that that end point um and well let's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:18:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 go ahead and give it a shot and try uh the example\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:18:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 oh there it is one thing i like to do here when i'm looking at\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:18:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it's kind of a lot of screen real estate but i like to see information about the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:18:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 about the solving and the something that i want to try that i haven't tried it i don't know if you you've ever messed around with these uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:18:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 har files um well but it gives you information all the information about the headers and the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:18:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 response so eventually if you wanted to do some analytics about how different input parameters the different\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:18:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 timings and things like this it's all in these har files so that's uh i downloaded a bunch of them but i haven't\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:18:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 done i haven't looked at them yet uh the caching you see that the caching is getting hit\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:19:09\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i want to take a moment to appreciate this uh this dresser sample\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:19:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 comes in here eventually there it is lovely we can add some\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:19:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 shelves and we can explode it lovely so all of this now is\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:19:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 on our heroic app let's take a look at what that looks like so if you actually hopefully i'm following here the steps\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:19:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah so let's go to the heroku dashboard\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:19:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and then i'll peek at the what's going on so this is it opens by\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:20:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 default to the mcniel one and this is actually our our let's say the one that we have\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:20:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 running here but i'm going to go to the personal one here's the app server workshop you see i have several\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:20:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 app servers and this is the the interface for a your application okay you have an\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:20:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 overview when you've deployed stuff um you can actually there's all sorts of add-ons that heroku\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:20:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 gives you and actually the caching that that we use on our mcniel app server\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:20:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 instance um uses uh memcached editor i'll show you that in a moment right now we're only using the the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:20:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 memory of this and i think the default um let's say the free level\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:20:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 heroku gives you a machine with like 512 megabytes of ram let me see if in the metrics it actually\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:20:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 shows that no it's not available for free but i'll show you um i'll show you what that looks like in uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:20:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 but here what i want to look at is the settings there's two places i want to look at settings\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:21:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and it shows you a little bit of um well there's a couple of things here first of all um where this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:21:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 this computer is that's important because actually um and steve or will correct me if i'm\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:21:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 wrong but our rhino compute um the aws that you just the server that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:21:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we'll just set up is on um in the united states in is it in virginia\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:21:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 maybe i actually spun this one up in in ohio just to keep it separate to all\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:21:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the all of our infrastructure okay well anyways i think heroku is also\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:21:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 all on um on amazon stuff so you can actually you know put them closest to each other\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:21:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that i think has some some effect um those variables that we can take pipes big\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:21:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 pipes yeah big big pipes those the the two variables that we configured in the command line right\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:21:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 compute key and run a compute url here they are so yeah you could actually add them here directly if you wanted to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:22:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 if you prefer this interface which i'm sure some of you do um you can add ssl certificates\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:22:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 here is actually your the domain i believe you can of course add your own\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:22:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 your own domain name to this kind of stuff you can do other stuff like you can hook\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:22:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it up to to a github repository so if um if you push to a particular branch it\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:22:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 would automatically um pull from that branch and deploy that without you having to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:22:33\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 to re-redeploy it and re-push it so you can you know do all that kind of stuff so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:22:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 there's a lot of really cool stuff that you can do here with uh heroku which i recommend you take a look at um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:22:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i had a question go for it um i think i when i first learned how to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:22:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 set up web servers like i would just go to an instance and spin up like ubuntu and set up node like node.js or flask or whatever and so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:22:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 like when i started seeing heroku i was like what does this do is it just like a nicer interface and easier\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:23:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 kind of like lower level of entry to get an app going or or just like a server it's a platform as\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:23:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 a service yeah so it's just it just makes this you know that instead of you know having to set up\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:23:17\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that server and do those steps i mean that's already taken care of for you it has these nice metrics there's a whole add-on\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:23:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so here i've just switched over to the mcniel account so you can see the metrics and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:23:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 one other thing that i didn't mention here is that if you go to more you can go to view logs\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:23:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so you can actually see the the kind of logs that we were seeing in visual studio you can also see that here in heroku so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:23:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you can see you know hitting the end points hitting different\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:23:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 different definitions etc so you can see what's going on over there um so that was in the more\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:23:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 view logs you can restart things et cetera um what i wanted to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:24:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 show now is talk about this the caching so here we're using memcache here and again i'm showing this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:24:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 on our own account because uh you i think you have to add and while you can get a free um a free\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:24:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 instance of memcache here with like i don't know i think like 30 megabytes um you have to put in a credit card so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:24:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 if you're happy with that you can try that but just so you can see what this looks like um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:24:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and there's other add-ons for redis or mongodb i think there's add-ons for all sorts of this all the standard stuff that you'd be\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:24:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 used to so actually here um before a few days ago\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:24:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i had 88 megabytes of cash being used um and it was 1099 items or a thousand\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:24:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 one hundred items because i had run that init script on the um on the kind of spiky thing so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:25:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i just i was kind of doing tests seeing at which resolution i could actually um still fit everything within 100\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:25:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 megabytes of cash so that was around 100 1 100 items now there's a few more because\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:25:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh we we've added a few more definitions so it's caching those as well now\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:25:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and any time if you want to if you want to clear that out you just say you know\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:25:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 flush cache but it also you know it gives you some some metrics you can alert when certain things happen so there's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:25:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 all sorts of other stuff you can do here so this is another server service called mem cashier and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:25:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and having that within heroku makes it again really very very simple you add that and it\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:25:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 actually goes and it adds um here this is again our mcniel instance\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:25:51\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 but there's you know other stuff which i guess i shouldn't show but it automatically adds your\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:25:57\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um your your things your the different parameters for from\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:26:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 memcache here um so maybe it would be a good time to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:26:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 pause and just check what's happening over in the chat any any interesting activity there that i should be aware of uh will anyway\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:26:17\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 why am i not seeing the chat here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:26:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um i'm just trying to help calm figure out um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:26:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 heroku cli um [Music]\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:26:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so brandon asks does mem cashier similar to cloudfront in aws\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:26:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 no so cloudfront is a cdn\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:26:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so it's it's something that you put in front of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:27:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 a um any kind of website or web server and then it handles\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:27:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um caching between the well between the clients between the browser and that and and that web server\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:27:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 whereas mem cashier is a is a caching add-on um something that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:27:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you use to implement kind of like specific caching so so um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:27:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh the app server is actually um it's doing the caching behind the scenes\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:27:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um so i say there's like there's there's different places you can do the caching um uh you know we're relying a little\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:27:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 bit on some caching of the browser some app server doing some caching and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:27:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh computes doing a little bit of caching as well um every little helps\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:27:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 all right so i'm trying to run some of these things here caleb has issues with heroku missing required flag\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:28:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um did you create the heroku app first\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:28:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 just okay just the theodorus question here so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:28:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the so you um i guess kind of answer marcus question as well so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:28:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we've set up compute using aws because compute being\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:28:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 essentially a desktop application it needs it needs it needs windows\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:28:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and heroku doesn't to my knowledge doesn't\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:28:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 currently provide any windows environments and particularly not not not ones that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:28:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 are suitable for running running windows sorry running rhino\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:28:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so that's why we used aws to spin up a virtual machine that we could\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:29:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 install rhino on um using heroku for the app server\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:29:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 because as lou said it's just it's just dead dead simple um all we need to worry about is the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:29:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 code and uh heroku figures out everything else\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:29:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and then we've we've made it so that the um compute server that we've we've set\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:29:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 up on um on aws is accessible from outside\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:29:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and we set up with a with an api key to make sure that only us can can use it and then we've\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:29:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 configured those details the address and the api key into heroku to so they\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:29:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 can talk to each other marco i don't know if the scene this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:29:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 diagram helps at all to at least see where things are situated um yeah that that makes sense i i guess\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:29:57\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i come across this question every time i see this because i'm not familiar with the infrastructure and i think\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:30:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i it's on me to kind of go back and do some homework but um we're also we're also learning ourselves you know what's what's the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:30:09\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 most appropriate combination of stuff for this i i remember that at one point i heard that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:30:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um you can maybe have them all in one virtual aws environment without\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:30:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 having to kind of set up these two servers but uh that's a kind of a question that came up in one of the workshops that that steve\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:30:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 gave to to our company back a few months ago yeah you you\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:30:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you definitely you know the the machine that will provision you know you can install\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:30:37\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 node.js um you can run this uh instead of then having to set up you know it would still\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:30:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it would hit you know hit localhost 8081 i guess yeah i mean but i mean it's possible\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:30:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah they could all be on the same machine it's possible but i wouldn't recommend\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:30:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it i think i think you're gonna you're just gonna it's gonna be a lot easier to deal with um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:31:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 something like heroku or another uh service like that um and once you've got your compute set\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:31:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 server set up you can you can you can spin up a ton of these different heroku instances\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:31:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and have them all talk to the same compute server or whatnot i see okay yeah could you also use like\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:31:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh i'm always trying to get my hands around the lexicon of services out there like aws amplify as a serverless option\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:31:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 to act as the app server you could um yeah i i i tried to use the aws stuff\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:31:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and i got confused um especially compared to heroku is just so dead simple that's why we're\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:31:40\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 using it but all these other all these other guys that are doing like lambda and um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:31:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and azure has i think they call them functions or something like that all this could be doing the same thing\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:31:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it's just that we found heroku just so dead simple it's probably why heroku's around it's just so dead simple that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:31:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it's a good place to start and then i think as you learn and kind of figure out if maybe heroic\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:32:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 is costing too much or is too slow you can kind of switch over to these other systems\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:32:17\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah um well we can also let's say\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:32:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 go back i mean that kind of covers the how you deploy this now if you uh make changes\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:32:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 to the code locally of course you'd you know push that code back if you're if you want to add new um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:32:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 new definitions or new end points anytime that the of course the structure of the of your\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:32:44\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 repository changes you push that and you know then just go back into heroku\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:32:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and you'll have the refreshed code um i think somebody asked about the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:32:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you know okay we have the definitions and you know some of you know what it takes to make a grasshopper definition but we're kind of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:33:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you know we haven't talked too much about like the let me share let me stop sharing go back\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:33:11\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 into visual studio code\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:33:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 over here so we haven't talked too much about you know when we're actually calling\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:33:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that slash examples or examples uh panels or dresser\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:33:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 like what it's actually serving we haven't talked too much about that and um in the initial example um you know we\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:33:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 have an html and a javascript file there's a little bit of a little bit of css\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:33:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and there's the inputs again this is the kind of stuff that i'd love to be able to like automate um you know have compute tell you give\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:33:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you information about what the inputs and outputs are and just automate the generation of these things\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:33:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um then there's a few libraries like 3js orbit controls to move things around\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:34:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 minor 3dm and eventually the javascript so this is you know the html which is\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:34:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you know fairly fairly straightforward and now each of these examples has this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:34:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 javascript code which does a couple of things first of all it sets up a data model very simple it's the this is\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:34:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 what the app server solve endpoint is expecting expecting\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:34:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the name of the definition okay of course the definition should be on the app server\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:34:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and then the inputs so this is just a an object which contains all of your\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:34:40\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 keys and their values in this case we generate this and we initially just get the values for\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:34:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the sliders uh and that were defined in the html okay um next thing we need to do is we need\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:34:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 to wait till rhino3dm uh loads up in this case because eventually we're going to use this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:34:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 to decode the mesh that we're going to get back in this case or any other geometry we might want to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:35:05\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 want to show or use we run some initialization code which is really all the stuff here is mostly boilerplate\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:35:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 3.js stuff setting up the scene the cameras the controls the on change functions\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:35:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and eventually there's also a function that reacts when any of the sliders are changed\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:35:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 but that's pretty much the same throughout the three samples uh really what's what's important here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:35:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 excuse me is this compute function which in the initial example um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:35:40\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 there's a lot of um a lot of stuff that the steve added just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:35:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 to check you know to print out all of the the timing information to to the console but essentially we\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:35:51\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we set up a request the kind of requests again remember the app server can accept\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:35:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 on the solve post or get here we're using post we take the body of of the that we want to send as that data\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:36:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 which is this thing that i was talking to you about before the definition and the input values\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:36:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and their names um and eventually what what is it we're sending we're sending json over uh to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:36:17\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the app server and then we're going to um fetch uh that request from solve\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:36:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 okay my headset just uh just changed can you hear me\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:36:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 if everything's okay um app server also gives you the error in case for whatever reason it can't connect to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:36:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the compute server or something else [Music] so then it's going to get the responses\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:37:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 jason doing some more timing stuff here um hide the spinner\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:37:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that's very important so we know we're not waiting anymore we're going to parse the data that we get back from\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:37:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 from app server and eventually from rhino compute and in this particular case uh this is the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:37:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the spiky thing which as i mentioned before um steve uh instead of giving us a mesh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:37:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 back it's actually compressing the mesh with draco compression we're decompressing that and when we get here and we get that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:37:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 mesh and eventually we run through you know the rest of it is showing the mesh so up until here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:37:37\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 is really all the work that's being done by rhino 3dm rhino compute and app server\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:37:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and the rest going down here is just making a 3js mesh deleting the one that's currently\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:37:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 there replacing it actually this is deleting the rhino3dm mesh but that's another\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:37:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 question um another topic but we replaced the mesh that we're currently seeing with the one that we\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:37:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 just got um do a bunch of stuff with timings in this one maybe it's better to show a different example because this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:38:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 has a lot of we're just really interested in seeing how much time things are taking and eventually catching the areas if\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:38:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 there are any but if you look through the different you know the dresser example um if you\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:38:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 look through the app.js it's very similar and we're just trying to figure out what what patterns are working really well\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:38:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and maybe eventually all of this stuff could be you know abstracted to refactor just something a little bit\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:38:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 more straightforward but again if you look at the dresser app.js again it's um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:38:31\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 do a fetch get the response check if the response is okay get the json hide the spinner of course\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:38:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 parse the the incoming geometry data decode the mesh and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:38:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 then show that visualize that that's what we're doing here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:38:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 define the define the inputs load rhino 3dm fetch that request\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:38:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 check errors um parse and visualize let me just show that at\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:39:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the examples uh the boilerplate stuff at the bottom luis and we wanted to leave plenty of time\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:39:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 for playing [Laughter] but uh time seems to have gotten away\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:39:17\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 from us um so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:39:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so yeah let me see what let me stop sharing and see what people are are saying over here um i cannot hear\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:39:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 actually can you hear me now\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:39:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 awesome awesome i i just want to steve said something in the um in the chat i thought it was worth worth\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:39:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 repeating um i failed to mention when i was talking about\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:39:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um setting up corey billing that that it will cost uh 10 cents per core per\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:39:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 hour but right now uh while um uh until until rhino 7 is\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:40:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh is released while it's still in in beta uh we are not charging you\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:40:09\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um what we're saying is you may see the odd charge for about 10 cents\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:40:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 as we try and figure out um the bugs in our um uh our billing\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:40:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 setup um but and and you'll get you you may get a like an\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:40:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 invoice a receipt that says okay you used um you know 200 odd\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:40:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 core hours this month but then underneath that you'll see a discount um for\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:40:40\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 all of that amount um and say we're just we're just um some of this is is is new\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:40:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 system and we're just kind of figuring out the bugs and and and being that it's not um you know\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:40:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 rhino seven is not yet officially released still in beta um you know we're not we're not gonna be\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:41:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 charging for it just just just yet\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:41:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh thanks for yeah that's it's important to discuss um a few a few things here and you know\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:41:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we also wanted to leave some time to to play but i think some things to that you know you could try\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:41:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um is to of course add a new definition to the app server locally and then try to deploy that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:41:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so run through that that loop again and of course create an interface for the definition you can\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:41:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you know kind of start to see what we've done with with ours here but as we've mentioned a couple you know a few times of course\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:41:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 there's you know patterns that we that we're starting to see emerge when we do this a few times so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:41:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um i think it's it's a it's gonna be you know coming here in the next few months maybe uh do some work to to abstract some of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:41:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 this maybe um but please uh give it a go and and you know let us know um if this is\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:41:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 useful um if you find other ways to do this as well um this is just kind of we put together our\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:42:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 heads together we put a few technologies together and this came out as kind of the um yeah\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:42:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the the friction the most frictionless manner to to get a grasshopper different\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:42:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 definition remote solving with rhino compute um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:42:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i'm gonna just you know for now say thank you before we go back to maybe just some questions um it's easy\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:42:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 to get a hold of us will at mcneil.com or louise mcneill.com yeah that is me on the left i'm sure i'll\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:42:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 look like that again at some point um stevenmcneil.com and i believe it's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:42:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh david l at mcneil dot com david navigan if he's around\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:42:43\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i believe raja is around i think i saw her name as well so uh dale said that too dale's in there so we\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:42:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 got a few people in here that's good um and also in the slides you have some references to some of these links and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:42:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the links throughout um so so yeah um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:43:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 if there's any questions we're happy to stick around for a bit and and answer some some questions\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:43:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and uh in these examples it seems like you're sending mostly parameters back for the grasshopper to solve um have you\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:43:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 guys played around with sending geometries back as well instead of just\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:43:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 parameters to generate new geometries um yeah um this i mean it's not\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:43:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 a great example but um where do i actually have this um yeah there's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:43:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 one second here i can find something\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:43:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 this when you went through it did you did you show the like the rh in and the rh out and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:43:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah yeah cool i looked at that for for a brief moment awesome so yeah\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:44:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 there's a sample although admittedly we should do more more of this work but yeah there's a sample that's up on\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:44:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 our rhino 3dm uh repo that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:44:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and i have it's for sure yeah it's here um which\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:44:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 sends a bunch of points um and does a does a um kind of delany mesh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:44:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 let me just see if i can find this one\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:44:33\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um here oh it's already open so\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:44:40\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah so i make a bunch of random points okay and there's a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:44:47\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 well i don't want to get into the discussion of uh the geometry based versus uh struck geometry types that we have\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:44:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and like to show on the screen am i not showing it oh my i think it's still on the other\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:45:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 there we go all right there we go sorry um nice\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:45:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so yeah um here i'm making some points putting them in a collection and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:45:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 eventually we evaluate the definition uh and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:45:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so there we're just sending some points so we have the definition and we have the if i go back here\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:45:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 here you can see that i have a parameter this is probably the same as a parameter\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:45:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the parameter in the grasshopper definition uh and i'm just adding the this points collection\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:45:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um and i'm then wrapping that in this in this trees uh this tree's object and i'm sending\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:45:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that the definition and the trees so that's similar to the pattern that we've seen in the other examples\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:45:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and this does\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:46:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 yeah actually the the i guess the interface the um you know the json that it that that the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:46:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 grasshopper endpoint expects and and the json that it it returns\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:46:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so this this all came out of a a hackathon um well this time two years ago\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:46:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um we've just come up with compute and um uh yeah\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:46:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 kiki and i had a late night in the uh in the airbnb hacking around with um um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:46:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 some stuff that he had done with uh running grasshopper scripts um as\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:46:44\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 commands inside of um inside of rhino inside revit and and we hooked it up and then the one of the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:46:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 hackathon teams um took it from there and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:46:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 we've got thoughts about um how the how it could work a little bit better and how it could interface a bit more with\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:47:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 some of the stuff that's been worked on more recently by by steve and um grasshopper the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:47:09\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 grasshopper player um but um you know there's still a bit\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:47:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 of work um still a bit of work to do there but you know the great thing is that all\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:47:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 this stuff it works um and we've tried to sort of fill in some of the gaps by\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:47:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 improving the uh the the libraries that you use so the compute libraries you know um make it make the interface a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:47:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 bit nicer for building up these data trees and and things um you know a ton of this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:47:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 code is all open source um you know the compute libraries um rhino3dm um compute itself um\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:47:49\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you know anyone's welcome to hack on it give us their opinions um you know it's\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:47:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 an ongoing ongoing project um sorry lucy carry on i just want to say that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:48:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 no no but yeah brandon i guess it's yeah you can send geometry in there and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:48:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 if you look yeah if you look in the in the compute code you'll see how\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:48:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 all those different geometry types are handled so there's a big like uh switch statement for if this parameter\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:48:21\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 is a curve if it's a point if it's a number if it's a blah blah blah and so all that stuff is handled and you\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:48:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 can see how that's handled in the rest hopper endpoint thank you for the the great uh the great\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:48:33\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 answer did you have a specific example you were trying to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:48:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 uh that you're thinking of granted yeah i think uh so we're sending like larger i guess\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:48:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 like context is very broad but like we're saying like a city context right um from like which is really just a mesh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:48:51\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 right so looking at that and trying to do some computations like let's say for a view analysis right is this\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:48:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 unobstructed is this building going to be obstructed by the surrounding context so it's we've typically worked in a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:49:03\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 precomputed state where we're just using the front end to visualize but then you know this opens the door to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:49:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 then send it back and forth and do computations live um so it was there's always going to be\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:49:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 overhead saying data back and forth but uh yeah i'm curious about how close we can get to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:49:19\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um getting that computation to kind of run live if the view analysis is running on random\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:49:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 compute yeah um i mean i mean something you\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:49:32\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 could do is uh i mean it wouldn't be that hard to have does your mess change very much or is it\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:49:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the same mesh yeah so i think our meshes we have you know several thousand different\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:49:45\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 meshes but the contents doesn't change so there might be opportunity to optimize that way so we're testing different\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:49:51\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 building meshes against the same context yeah because i was thinking that i mean\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:49:57\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 one of the things that we have set up in the app server is the definition lives on the app server\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:50:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and then it basically all it's doing is feeding a url to compute of like where that definition is and that if the\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:50:09\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 url is the same as it was before on compute it just keeps reusing it doesn't go and download the definition again and the same kind of\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:50:16\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 technique could probably be done with meshes um you could probably have a subdirectory in the app server with\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:50:22\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 a thousand meshes that just you're just giving urls to the meshes to yeah to compute\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:50:29\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um so compute then when it sees that url it just would say well i've already got this mesh and it just kind of reuses it um it's all\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:50:38\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it's all about it's all about reducing the the network traffic that's that's that's where that's where\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:50:44\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you get the gain yeah and as luis mentioned before\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:50:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 there are technologies built into um we have draco that's this built into\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:50:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 rhino 3dm so you could try using that to reduce the size of the actual\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:51:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 of the mesh you're sending as well at the expense of um time to uh\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:51:09\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 compress and decompress it of course um but yeah what steve said is really\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:51:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that's the that's the main thing is reducing the number of times that you\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:51:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 send it that's going to be the biggest the biggest difference you know if you can have a you know send it and\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:51:27\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 then like before you do all your stuff or or have some kind of you know caching\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:51:34\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 mechanism do i need to update it then no that's that's the key\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:51:41\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 that makes sense i think you know what we've seen from like gltf like using bsun like it's cheaper in some ways to\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:51:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 decompress and like compress and then decompress than sending larger data streams through the traffic\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:51:55\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 decompress is fast compression takes time yeah um and the b and the i is that how\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:52:01\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you pronounce it b sun i've never actually figured that out but i think i'm going with that i'm at the standby i like it i like it\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:52:08\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um i i think that beeson uh uses draco compression that's where\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:52:15\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you that's where you get the that's where you really get the bang for the buck with gltf um and draco the way we've got draco\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:52:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 compression um built into rhino3dm is you can set the compression level and it takes\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:52:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 takes longer the more you want to compress it and also you can also um if you don't\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:52:36\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 care as much there's um it's a lossy compress on compression so it's like a jpeg\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:52:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you can think of it um where your precision can be decreased and you'll get but you'll get\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:52:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 much much tighter compression so it depends on what you need to do but\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:52:54\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it's a great idea because if you actually have a thousand meshes and you can and they don't change you\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:52:59\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 can just spend a half an hour compressing all those um really really tight and then put those where you need them\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:53:06\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and and then you got way less data to send around it makes a\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:53:12\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 lot of sense\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:53:24\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 any other questions comments ideas\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:53:35\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so yeah i mean i imagine i can imagine all of you have some much more interesting definitions that\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:53:42\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 are probably a lot more uh you know we'll kick the tires on this way better than we have been\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:53:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 um so we'd like to hear if you know if things are still standing up after\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:53:53\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you run you run it through this process so yeah just let us know what's working\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:54:00\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 what's not working uh luis i i for as for ideas i really\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:54:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 like your idea of automatic web pages i hadn't thought about that um where basically you're\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:54:14\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 kind of inspecting the definition and then just making some default set of sliders\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:54:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 and inputs um for it um that'd be a pretty cool hackathon\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:54:26\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 project actually yeah yeah i mean the so express you can add\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:54:33\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i don't know what they call what's the right term view engines um so you can instead of sending\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:54:39\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 the the json or the data that we're sending from app server to uh to those htmls you can actually\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:54:46\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 render on the fly uh html so you could use those view engines they have also\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:54:52\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you know some funny names like i don't know mustaches or something like this i don't know\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:54:58\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so there's a bunch of view engines you can install to express to eventually generate [Music]\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:55:04\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 those views what's coming up next for you folks\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:55:10\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 anything that keeps you awake at night\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:55:18\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 no i sleep a lot i like to sleep this was keeping me awake\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:55:23\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 but i i enjoy sleeping yeah\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:55:28\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 it's what wakes me up in the morning not what keeps me awake at night yeah i was gonna say as long as there\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:55:33\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 are rhino users um i'm certainly not sleeping during the day\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:55:44\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 all right well if um yeah so how do we get the recording i believe if i'm a mistake and i'm it\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:55:50\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 they're gonna do some hopefully some processing some editing of this recording because\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:55:56\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 i'd love to have some of the stuff edited out but uh in about a week or so they're gonna they're gonna release this is what i've\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:56:02\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 heard um i don't know i don't know how that's gonna work in practice but that's that's what i've\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:56:07\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 heard so you'll get it when we do i guess\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:56:13\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 all right everybody well we'll be around um somehow either via the slack slack\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:56:20\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 workspace please uh please get in touch with us there with our emails or whatever other\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:56:25\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 way you can find us we'll we'll be around over the weekend and on monday some of us\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:56:30\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 so yeah thank you very much for for joining us we look forward to seeing what you do with this thank you\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:56:37\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 thank you\cb1 \
\pard\pardeftab720\partightenfactor0

\fs31\fsmilli15600 \cf4 \cb5 \strokec4 2:56:48\
\pard\pardeftab720\partightenfactor0

\fs28\fsmilli14400 \cf2 \cb3 \strokec2 you\cb1 \
}